[33mcommit 1c3adc2de8da0b1da71f7dddafd116b9574ea210[m
Author: haomama2012 <2524145136@qq.com>
Date:   Thu Jun 23 18:05:07 2016 +0800

    add hellochart

[1mdiff --git a/app/build.gradle b/app/build.gradle[m
[1mindex 51e6a4b..204b5fc 100644[m
[1m--- a/app/build.gradle[m
[1m+++ b/app/build.gradle[m
[36m@@ -20,11 +20,14 @@[m [mandroid {[m
 }[m
 [m
 dependencies {[m
[31m-    compile fileTree(dir: 'libs', include: ['*.jar'])[m
[32m+[m[32m    compile fileTree(include: ['*.jar'], dir: 'libs')[m
     testCompile 'junit:junit:4.12'[m
     compile 'com.android.support:appcompat-v7:23.3.0'[m
     compile 'com.android.support:design:23.3.0'[m
     compile 'com.jakewharton:butterknife:8.0.1'[m
     apt 'com.jakewharton:butterknife-compiler:8.0.1'[m
     compile 'com.github.bumptech.glide:glide:3.7.0'[m
[32m+[m[32m    //    pull-to-refresh[m
[32m+[m[32m    compile 'in.srain.cube:ultra-ptr:1.0.11'[m
[32m+[m[32m    compile files('libs/hellocharts-library-1.5.8.jar')[m
 }[m
[1mdiff --git a/app/libs/hellocharts-library-1.5.8.jar b/app/libs/hellocharts-library-1.5.8.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..afa49d5[m
Binary files /dev/null and b/app/libs/hellocharts-library-1.5.8.jar differ
[1mdiff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml[m
[1mindex b01c3f0..1789373 100644[m
[1m--- a/app/src/main/AndroidManifest.xml[m
[1m+++ b/app/src/main/AndroidManifest.xml[m
[36m@@ -14,18 +14,14 @@[m
             android:name=".MainActivity"[m
             android:label="@string/app_name"[m
             android:theme="@style/AppTheme.NoActionBar">[m
[31m-            <intent-filter>[m
[31m-                <action android:name="android.intent.action.MAIN" />[m
 [m
[31m-                <category android:name="android.intent.category.LAUNCHER" />[m
[31m-            </intent-filter>[m
         </activity>[m
 [m
         <activity[m
             android:name=".activity.PersonInfoActivity"[m
             android:label="@string/app_name"[m
             android:launchMode="singleTask"[m
[31m-            android:theme="@style/AppTheme.NoActionBar"/>[m
[32m+[m[32m            android:theme="@style/AppTheme.NoActionBar" />[m
 [m
         <activity[m
             android:name=".activity.WangYiYunActivity"[m
[36m@@ -37,8 +33,51 @@[m
             android:name=".activity.WangNewsActivity"[m
             android:label="@string/app_name"[m
             android:launchMode="singleTask"[m
[31m-            android:theme="@style/AppTheme.NoActionBar"/>[m
[32m+[m[32m            android:theme="@style/AppTheme.NoActionBar" />[m
[32m+[m
[32m+[m[32m        <activity[m
[32m+[m[32m            android:name=".activity.WaPullToRefreshActivity"[m
[32m+[m[32m            android:label="@string/app_name"[m
[32m+[m[32m            android:launchMode="singleTask"[m
[32m+[m[32m            android:theme="@style/AppTheme.NoActionBar" />[m
[32m+[m
[32m+[m[32m        <activity[m
[32m+[m[32m            android:name=".refresh.UltraRefreshActivity"[m
[32m+[m[32m            android:label="@string/app_name"[m
[32m+[m[32m            android:launchMode="singleTask"[m
[32m+[m[32m            android:theme="@style/AppTheme.NoActionBar" />[m
[32m+[m
[32m+[m[32m        <activity[m
[32m+[m[32m            android:name=".activity.WaUIActivity"[m
[32m+[m[32m            android:label="@string/app_name"[m
[32m+[m[32m            android:launchMode="singleTask"[m
[32m+[m[32m            android:theme="@style/AppTheme.NoActionBar" />[m
[32m+[m
[32m+[m[32m        <activity[m
[32m+[m[32m            android:name=".chart.HelloChartActivity"[m
[32m+[m[32m            android:label="@string/app_name"[m
[32m+[m[32m            android:launchMode="singleTask"[m
[32m+[m[32m            android:theme="@style/AppTheme.NoActionBar" />[m
 [m
[32m+[m[32m        <activity[m
[32m+[m[32m            android:name=".chart.LineChartActivity"[m
[32m+[m[32m            android:label="@string/app_name"[m
[32m+[m[32m            android:launchMode="singleTask"[m
[32m+[m[32m            android:theme="@style/AppTheme.NoActionBar">[m
[32m+[m
[32m+[m[32m        </activity>[m
[32m+[m
[32m+[m[32m        <activity[m
[32m+[m[32m            android:name=".chart.ColumnChartActivity"[m
[32m+[m[32m            android:label="@string/app_name"[m
[32m+[m[32m            android:launchMode="singleTask"[m
[32m+[m[32m            android:theme="@style/AppTheme.NoActionBar" >[m
[32m+[m[32m            <intent-filter>[m
[32m+[m[32m                <action android:name="android.intent.action.MAIN" />[m
[32m+[m
[32m+[m[32m                <category android:name="android.intent.category.LAUNCHER" />[m
[32m+[m[32m            </intent-filter>[m
[32m+[m[32m        </activity>[m
     </application>[m
 [m
 </manifest>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/MainActivity.java b/app/src/main/java/com/example/superdemo/MainActivity.java[m
[1mindex 77ee906..fab7a90 100644[m
[1m--- a/app/src/main/java/com/example/superdemo/MainActivity.java[m
[1m+++ b/app/src/main/java/com/example/superdemo/MainActivity.java[m
[36m@@ -16,6 +16,8 @@[m [mimport android.view.MenuItem;[m
 import android.view.View;[m
 [m
 import com.example.superdemo.activity.PersonInfoActivity;[m
[32m+[m[32mimport com.example.superdemo.activity.WaPullToRefreshActivity;[m
[32m+[m[32mimport com.example.superdemo.activity.WaUIActivity;[m
 import com.example.superdemo.ui.CircleImageView;[m
 import com.example.superdemo.ui.WaveHelper;[m
 import com.example.superdemo.ui.WaveView;[m
[36m@@ -142,9 +144,9 @@[m [mpublic class MainActivity extends AppCompatActivity[m
         } else if (id == R.id.nav_manage) {[m
 [m
         } else if (id == R.id.nav_share) {[m
[31m-[m
[32m+[m[32m            startActivity(new Intent(this, WaUIActivity.class));[m
         } else if (id == R.id.nav_send) {[m
[31m-[m
[32m+[m[32m        startActivity(new Intent(this, WaPullToRefreshActivity.class));[m
         }[m
 [m
         DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/activity/WaPullToRefreshActivity.java b/app/src/main/java/com/example/superdemo/activity/WaPullToRefreshActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..9698223[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/activity/WaPullToRefreshActivity.java[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32mpackage com.example.superdemo.activity;[m
[32m+[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.support.annotation.Nullable;[m
[32m+[m[32mimport android.support.v7.app.AppCompatActivity;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.widget.Button;[m
[32m+[m
[32m+[m[32mimport com.example.superdemo.R;[m
[32m+[m[32mimport com.example.superdemo.refresh.UltraRefreshActivity;[m
[32m+[m
[32m+[m[32mimport butterknife.BindView;[m
[32m+[m[32mimport butterknife.ButterKnife;[m
[32m+[m[32mimport butterknife.OnClick;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * WaPullToRefreshActivity[m
[32m+[m[32m */[m
[32m+[m[32mpublic class WaPullToRefreshActivity extends AppCompatActivity {[m
[32m+[m[32m    @BindView(R.id.refresh_btn1)[m
[32m+[m[32m    Button mRefreshBtn1;[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onCreate(@Nullable Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        setContentView(R.layout.activity_refresh);[m
[32m+[m[32m        ButterKnife.bind(this);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @OnClick(R.id.refresh_btn1)[m
[32m+[m[32m    public void onClick(View view) {[m
[32m+[m[32m        switch (view.getId()) {[m
[32m+[m[32m            case R.id.refresh_btn1:[m
[32m+[m[32m                startActivity(new Intent(this, UltraRefreshActivity.class));[m
[32m+[m[32m                break;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/activity/WaUIActivity.java b/app/src/main/java/com/example/superdemo/activity/WaUIActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f0996c2[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/activity/WaUIActivity.java[m
[36m@@ -0,0 +1,56 @@[m
[32m+[m[32mpackage com.example.superdemo.activity;[m
[32m+[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.support.annotation.Nullable;[m
[32m+[m[32mimport android.support.v7.app.AppCompatActivity;[m
[32m+[m[32mimport android.support.v7.widget.Toolbar;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.widget.Button;[m
[32m+[m
[32m+[m[32mimport com.example.superdemo.R;[m
[32m+[m[32mimport com.example.superdemo.chart.HelloChartActivity;[m
[32m+[m
[32m+[m[32mimport butterknife.BindView;[m
[32m+[m[32mimport butterknife.ButterKnife;[m
[32m+[m[32mimport butterknife.OnClick;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * UI[m
[32m+[m[32m */[m
[32m+[m[32mpublic class WaUIActivity extends AppCompatActivity {[m
[32m+[m
[32m+[m[32m    @BindView(R.id.toolbar)[m
[32m+[m[32m    Toolbar mToolbar;[m
[32m+[m[32m    @BindView(R.id.chart_btn)[m
[32m+[m[32m    Button mChartBtn;[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onCreate(@Nullable Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m
[32m+[m[32m        setContentView(R.layout.activity_ui);[m
[32m+[m[32m        ButterKnife.bind(this);[m
[32m+[m
[32m+[m[32m        setToolBar();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void setToolBar() {[m
[32m+[m[32m        setSupportActionBar(mToolbar);[m
[32m+[m[32m        getSupportActionBar().setDisplayShowTitleEnabled(false);[m
[32m+[m[32m        mToolbar.setTitle(getResources().getString(R.string.line_chart));[m
[32m+[m[32m        mToolbar.setNavigationIcon(R.mipmap.back);[m
[32m+[m
[32m+[m[32m        mToolbar.setNavigationOnClickListener(new View.OnClickListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onClick(View v) {[m
[32m+[m[32m                finish();[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @OnClick(R.id.chart_btn)[m
[32m+[m[32m    public void onClick() {[m
[32m+[m[32m        startActivity(new Intent(this,HelloChartActivity.class));[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/activity/WangYiYunActivity.java b/app/src/main/java/com/example/superdemo/activity/WangYiYunActivity.java[m
[1mindex dd4cc3d..89ab96c 100644[m
[1m--- a/app/src/main/java/com/example/superdemo/activity/WangYiYunActivity.java[m
[1m+++ b/app/src/main/java/com/example/superdemo/activity/WangYiYunActivity.java[m
[36m@@ -51,6 +51,7 @@[m [mpublic class WangYiYunActivity extends AppCompatActivity {[m
     @Override[m
     protected void onCreate(@Nullable Bundle savedInstanceState) {[m
         super.onCreate(savedInstanceState);[m
[32m+[m[32m//        CommonUtils.changeSystemBar(this,R.color.colorAccent,0);[m
         setContentView(R.layout.activity_wangyiyun);[m
         ButterKnife.bind(this);[m
 [m
[1mdiff --git a/app/src/main/java/com/example/superdemo/adapter/GridViewAdapter.java b/app/src/main/java/com/example/superdemo/adapter/GridViewAdapter.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2dec25b[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/adapter/GridViewAdapter.java[m
[36m@@ -0,0 +1,62 @@[m
[32m+[m[32mpackage com.example.superdemo.adapter;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m[32mimport android.view.LayoutInflater;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.widget.BaseAdapter;[m
[32m+[m[32mimport android.widget.ImageView;[m
[32m+[m
[32m+[m[32mimport com.example.superdemo.R;[m
[32m+[m[32mimport com.example.superdemo.utils.CommonUtils;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Administrator on 2016/6/20.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class GridViewAdapter extends BaseAdapter {[m
[32m+[m[32m    private Context context;[m
[32m+[m[32m    private List<String> mList;[m
[32m+[m
[32m+[m[32m    public GridViewAdapter(Context context, List<String> list) {[m
[32m+[m[32m        this.context = context;[m
[32m+[m[32m        this.mList = list;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int getCount() {[m
[32m+[m[32m        return mList == null ? 0 : mList.size();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public Object getItem(int position) {[m
[32m+[m[32m        return mList.get(position);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public long getItemId(int position) {[m
[32m+[m[32m        return position;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public View getView(int position, View convertView, ViewGroup parent) {[m
[32m+[m[32m        ViewHolder viewHolder;[m
[32m+[m[32m        if (convertView == null) {[m
[32m+[m[32m            convertView = LayoutInflater.from(context).inflate(R.layout.grid_item, parent, false);[m
[32m+[m[32m            viewHolder = new ViewHolder();[m
[32m+[m[32m            viewHolder.mImageView = (ImageView) convertView.findViewById(R.id.with_grid_view_item_image);[m
[32m+[m[32m            convertView.setTag(viewHolder);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            viewHolder = (ViewHolder) convertView.getTag();[m
[32m+[m[32m        }[m
[32m+[m[32m        CommonUtils.loadGlideImage(context, mList.get(position), viewHolder.mImageView);[m
[32m+[m[32m        Log.i("key", "url = " + mList.get(position));[m
[32m+[m[32m        return convertView;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private class ViewHolder {[m
[32m+[m[32m        private ImageView mImageView;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/chart/ColumnChartActivity.java b/app/src/main/java/com/example/superdemo/chart/ColumnChartActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..26d060a[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/chart/ColumnChartActivity.java[m
[36m@@ -0,0 +1,464 @@[m
[32m+[m[32mpackage com.example.superdemo.chart;[m
[32m+[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.support.annotation.Nullable;[m
[32m+[m[32mimport android.support.v4.app.Fragment;[m
[32m+[m[32mimport android.support.v7.app.AppCompatActivity;[m
[32m+[m[32mimport android.support.v7.widget.Toolbar;[m
[32m+[m[32mimport android.view.LayoutInflater;[m
[32m+[m[32mimport android.view.Menu;[m
[32m+[m[32mimport android.view.MenuInflater;[m
[32m+[m[32mimport android.view.MenuItem;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.widget.Toast;[m
[32m+[m
[32m+[m[32mimport com.example.superdemo.R;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport butterknife.BindView;[m
[32m+[m[32mimport butterknife.ButterKnife;[m
[32m+[m[32mimport lecho.lib.hellocharts.gesture.ZoomType;[m
[32m+[m[32mimport lecho.lib.hellocharts.listener.ColumnChartOnValueSelectListener;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.Axis;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.Column;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.ColumnChartData;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.SubcolumnValue;[m
[32m+[m[32mimport lecho.lib.hellocharts.util.ChartUtils;[m
[32m+[m[32mimport lecho.lib.hellocharts.view.ColumnChartView;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * ColumnChartActivity[m
[32m+[m[32m */[m
[32m+[m[32mpublic class ColumnChartActivity extends AppCompatActivity {[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onCreate(@Nullable Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m
[32m+[m[32m        setContentView(R.layout.activity_line_chart);[m
[32m+[m[32m        if (savedInstanceState == null) {[m
[32m+[m[32m            getSupportFragmentManager().beginTransaction().add(R.id.container, new PlaceholderFragment()).commit();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static class PlaceholderFragment extends Fragment {[m
[32m+[m[32m        @BindView(R.id.toolbar)[m
[32m+[m[32m        Toolbar mToolbar;[m
[32m+[m[32m        @BindView(R.id.chart)[m
[32m+[m[32m        ColumnChartView mColumnchart;[m
[32m+[m[32m        AppCompatActivity compatActivity;[m
[32m+[m
[32m+[m[32m        private static final int DEFAULT_DATA = 0;[m
[32m+[m[32m        private static final int SUBCOLUMNS_DATA = 1;[m
[32m+[m[32m        private static final int STACKED_DATA = 2;[m
[32m+[m[32m        private static final int NEGATIVE_SUBCOLUMNS_DATA = 3;[m
[32m+[m[32m        private static final int NEGATIVE_STACKED_DATA = 4;[m
[32m+[m
[32m+[m[32m        private ColumnChartData data;[m
[32m+[m[32m        private boolean hasAxes = true;[m
[32m+[m[32m        private boolean hasAxesNames = true;[m
[32m+[m[32m        private boolean hasLabels = false;[m
[32m+[m[32m        private boolean hasLabelForSelected = false;[m
[32m+[m[32m        private int dataType = DEFAULT_DATA;[m
[32m+[m
[32m+[m[32m        @Nullable[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {[m
[32m+[m[32m            View rootView = inflater.inflate(R.layout.fragment_column_chart, container, false);[m
[32m+[m
[32m+[m[32m            ButterKnife.bind(this, rootView);[m
[32m+[m[32m            compatActivity = (AppCompatActivity) getActivity();[m
[32m+[m[32m            compatActivity.setSupportActionBar(mToolbar);[m
[32m+[m[32m            setHasOptionsMenu(true);[m
[32m+[m
[32m+[m[32m            mColumnchart.setOnValueTouchListener(new ValueTouchListener());[m
[32m+[m
[32m+[m[32m            generateData();[m
[32m+[m[32m            return rootView;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m
[32m+[m[32m        private void generateData() {[m
[32m+[m[32m            switch (dataType) {[m
[32m+[m[32m                case DEFAULT_DATA:[m
[32m+[m[32m                    generateDefaultData();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case SUBCOLUMNS_DATA:[m
[32m+[m[32m                    generateSubcolumnsData();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case STACKED_DATA:[m
[32m+[m[32m                    generateStackedData();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case NEGATIVE_SUBCOLUMNS_DATA:[m
[32m+[m[32m                    generateNegativeSubcolumnsData();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case NEGATIVE_STACKED_DATA:[m
[32m+[m[32m                    generateNegativeStackedData();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                default:[m
[32m+[m[32m                    generateDefaultData();[m
[32m+[m[32m                    break;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        //default data 条线图只有一个子状[m
[32m+[m[32m        private void generateDefaultData() {[m
[32m+[m[32m            int numSubcolumns = 1;[m
[32m+[m[32m            int numColumns = 8;[m
[32m+[m[32m            // Column can have many subcolumns, here by default I use 1 subcolumn in each of 8 columns.[m
[32m+[m[32m            List<Column> columns = new ArrayList<>();[m
[32m+[m[32m            List<SubcolumnValue> values;[m
[32m+[m
[32m+[m[32m            for (int i = 0; i < numColumns; ++i) {[m
[32m+[m[32m                values = new ArrayList<>();[m
[32m+[m[32m                for (int j = 0; j < numSubcolumns; ++j) {[m
[32m+[m[32m                    values.add(new SubcolumnValue((float) Math.random() * 50f + 5, ChartUtils.pickColor()));[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                Column column = new Column(values);[m
[32m+[m[32m                column.setHasLabels(hasLabels);[m
[32m+[m[32m                column.setHasLabelsOnlyForSelected(hasLabelForSelected);[m
[32m+[m[32m                columns.add(column);[m
[32m+[m[32m            }[m
[32m+[m[32m            data = new ColumnChartData(columns);[m
[32m+[m
[32m+[m[32m            if (hasAxes) {[m
[32m+[m[32m                Axis axisX = new Axis();[m
[32m+[m[32m                Axis axisY = new Axis().setHasLines(true);[m
[32m+[m[32m                if (hasAxesNames) {[m
[32m+[m[32m                    axisX.setName("Axis X");[m
[32m+[m[32m                    axisY.setName("Axis Y");[m
[32m+[m[32m                }[m
[32m+[m[32m                data.setAxisXBottom(axisX);[m
[32m+[m[32m                data.setAxisYLeft(axisY);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                data.setAxisXBottom(null);[m
[32m+[m[32m                data.setAxisYLeft(null);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            mColumnchart.setColumnChartData(data);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Generates columns with subcolumns, columns have larger separation than subcolumns.[m
[32m+[m[32m         */[m
[32m+[m[32m        private void generateSubcolumnsData() {[m
[32m+[m[32m            int numSubcolumns = 4;[m
[32m+[m[32m            int numColumns = 4;[m
[32m+[m[32m            // Column can have many subcolumns, here I use 4 subcolumn in each of 8 columns.[m
[32m+[m[32m            List<Column> columns = new ArrayList<>();[m
[32m+[m[32m            List<SubcolumnValue> values;[m
[32m+[m[32m            for (int i = 0; i < numColumns; ++i) {[m
[32m+[m
[32m+[m[32m                values = new ArrayList<>();[m
[32m+[m[32m                for (int j = 0; j < numSubcolumns; ++j) {[m
[32m+[m[32m                    values.add(new SubcolumnValue((float) Math.random() * 50f + 5, ChartUtils.pickColor()));[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                Column column = new Column(values);[m
[32m+[m[32m                column.setHasLabels(hasLabels);[m
[32m+[m[32m                column.setHasLabelsOnlyForSelected(hasLabelForSelected);[m
[32m+[m[32m                columns.add(column);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            data = new ColumnChartData(columns);[m
[32m+[m
[32m+[m[32m            if (hasAxes) {[m
[32m+[m[32m                Axis axisX = new Axis();[m
[32m+[m[32m                Axis axisY = new Axis().setHasLines(true);[m
[32m+[m[32m                if (hasAxesNames) {[m
[32m+[m[32m                    axisX.setName("Axis X");[m
[32m+[m[32m                    axisY.setName("Axis Y");[m
[32m+[m[32m                }[m
[32m+[m[32m                data.setAxisXBottom(axisX);[m
[32m+[m[32m                data.setAxisYLeft(axisY);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                data.setAxisXBottom(null);[m
[32m+[m[32m                data.setAxisYLeft(null);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            mColumnchart.setColumnChartData(data);[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Generates columns with stacked subcolumns.[m
[32m+[m[32m         */[m
[32m+[m[32m        private void generateStackedData() {[m
[32m+[m[32m            int numSubcolumns = 4;[m
[32m+[m[32m            int numColumns = 8;[m
[32m+[m[32m            // Column can have many stacked subcolumns, here I use 4 stacke subcolumn in each of 4 columns.[m
[32m+[m[32m            List<Column> columns = new ArrayList<>();[m
[32m+[m[32m            List<SubcolumnValue> values;[m
[32m+[m[32m            for (int i = 0; i < numColumns; ++i) {[m
[32m+[m
[32m+[m[32m                values = new ArrayList<>();[m
[32m+[m[32m                for (int j = 0; j < numSubcolumns; ++j) {[m
[32m+[m[32m                    values.add(new SubcolumnValue((float) Math.random() * 20f + 5, ChartUtils.pickColor()));[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                Column column = new Column(values);[m
[32m+[m[32m                column.setHasLabels(hasLabels);[m
[32m+[m[32m                column.setHasLabelsOnlyForSelected(hasLabelForSelected);[m
[32m+[m[32m                columns.add(column);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            data = new ColumnChartData(columns);[m
[32m+[m
[32m+[m[32m            // Set stacked flag.[m
[32m+[m[32m            data.setStacked(true);[m
[32m+[m
[32m+[m[32m            if (hasAxes) {[m
[32m+[m[32m                Axis axisX = new Axis();[m
[32m+[m[32m                Axis axisY = new Axis().setHasLines(true);[m
[32m+[m[32m                if (hasAxesNames) {[m
[32m+[m[32m                    axisX.setName("Axis X");[m
[32m+[m[32m                    axisY.setName("Axis Y");[m
[32m+[m[32m                }[m
[32m+[m[32m                data.setAxisXBottom(axisX);[m
[32m+[m[32m                data.setAxisYLeft(axisY);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                data.setAxisXBottom(null);[m
[32m+[m[32m                data.setAxisYLeft(null);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            mColumnchart.setColumnChartData(data);[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void generateNegativeSubcolumnsData() {[m
[32m+[m[32m            int numSubcolumns = 4;[m
[32m+[m[32m            int numColumns = 4;[m
[32m+[m[32m            List<Column> columns = new ArrayList<>();[m
[32m+[m[32m            List<SubcolumnValue> values;[m
[32m+[m[32m            for (int i = 0; i < numColumns; ++i) {[m
[32m+[m
[32m+[m[32m                values = new ArrayList<>();[m
[32m+[m[32m                for (int j = 0; j < numSubcolumns; ++j) {[m
[32m+[m[32m                    int sign = getSign();[m
[32m+[m[32m                    values.add(new SubcolumnValue((float) Math.random() * 50f * sign + 5 * sign, ChartUtils.pickColor[m
[32m+[m[32m                            ()));[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                Column column = new Column(values);[m
[32m+[m[32m                column.setHasLabels(hasLabels);[m
[32m+[m[32m                column.setHasLabelsOnlyForSelected(hasLabelForSelected);[m
[32m+[m[32m                columns.add(column);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            data = new ColumnChartData(columns);[m
[32m+[m
[32m+[m[32m            if (hasAxes) {[m
[32m+[m[32m                Axis axisX = new Axis();[m
[32m+[m[32m                Axis axisY = new Axis().setHasLines(true);[m
[32m+[m[32m                if (hasAxesNames) {[m
[32m+[m[32m                    axisX.setName("Axis X");[m
[32m+[m[32m                    axisY.setName("Axis Y");[m
[32m+[m[32m                }[m
[32m+[m[32m                data.setAxisXBottom(axisX);[m
[32m+[m[32m                data.setAxisYLeft(axisY);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                data.setAxisXBottom(null);[m
[32m+[m[32m                data.setAxisYLeft(null);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            mColumnchart.setColumnChartData(data);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void generateNegativeStackedData() {[m
[32m+[m[32m            int numSubcolumns = 4;[m
[32m+[m[32m            int numColumns = 8;[m
[32m+[m[32m            // Column can have many stacked subcolumns, here I use 4 stacke subcolumn in each of 4 columns.[m
[32m+[m[32m            List<Column> columns = new ArrayList<>();[m
[32m+[m[32m            List<SubcolumnValue> values;[m
[32m+[m[32m            for (int i = 0; i < numColumns; ++i) {[m
[32m+[m
[32m+[m[32m                values = new ArrayList<>();[m
[32m+[m[32m                for (int j = 0; j < numSubcolumns; ++j) {[m
[32m+[m[32m                    int sign = getSign();[m
[32m+[m[32m                    values.add(new SubcolumnValue((float) Math.random() * 20f * sign + 5 * sign, ChartUtils.pickColor()));[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                Column column = new Column(values);[m
[32m+[m[32m                column.setHasLabels(hasLabels);[m
[32m+[m[32m                column.setHasLabelsOnlyForSelected(hasLabelForSelected);[m
[32m+[m[32m                columns.add(column);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            data = new ColumnChartData(columns);[m
[32m+[m
[32m+[m[32m            // Set stacked flag.[m
[32m+[m[32m            data.setStacked(true);[m
[32m+[m
[32m+[m[32m            if (hasAxes) {[m
[32m+[m[32m                Axis axisX = new Axis();[m
[32m+[m[32m                Axis axisY = new Axis().setHasLines(true);[m
[32m+[m[32m                if (hasAxesNames) {[m
[32m+[m[32m                    axisX.setName("Axis X");[m
[32m+[m[32m                    axisY.setName("Axis Y");[m
[32m+[m[32m                }[m
[32m+[m[32m                data.setAxisXBottom(axisX);[m
[32m+[m[32m                data.setAxisYLeft(axisY);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                data.setAxisXBottom(null);[m
[32m+[m[32m                data.setAxisYLeft(null);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            mColumnchart.setColumnChartData(data);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private int getSign() {[m
[32m+[m[32m            int[] sign = new int[]{-1, 1};[m
[32m+[m[32m            return sign[Math.round((float) Math.random())];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void reset() {[m
[32m+[m[32m            hasAxes = true;[m
[32m+[m[32m            hasAxesNames = true;[m
[32m+[m[32m            hasLabels = false;[m
[32m+[m[32m            hasLabelForSelected = false;[m
[32m+[m[32m            dataType = DEFAULT_DATA;[m
[32m+[m[32m            mColumnchart.setValueSelectionEnabled(hasLabelForSelected);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleLabels() {[m
[32m+[m[32m            hasLabels = !hasLabels;[m
[32m+[m
[32m+[m[32m            if (hasLabels) {[m
[32m+[m[32m                hasLabelForSelected = false;[m
[32m+[m[32m                mColumnchart.setValueSelectionEnabled(hasLabelForSelected);[m
[32m+[m[32m            }[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleLabelForSelected() {[m
[32m+[m[32m            hasLabelForSelected = !hasLabelForSelected;[m
[32m+[m[32m            mColumnchart.setValueSelectionEnabled(hasLabelForSelected);[m
[32m+[m
[32m+[m[32m            if (hasLabelForSelected) {[m
[32m+[m[32m                hasLabels = false;[m
[32m+[m[32m            }[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleAxes() {[m
[32m+[m[32m            hasAxes = !hasAxes;[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleAxesNames() {[m
[32m+[m[32m            hasAxesNames = !hasAxesNames;[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * To animate values you have to change targets values and then call { Chart#startDataAnimation()}[m
[32m+[m[32m         * method(don't confuse with View.animate()).[m
[32m+[m[32m         */[m
[32m+[m[32m        private void prepareDataAnimation() {[m
[32m+[m[32m            for (Column column : data.getColumns()) {[m
[32m+[m[32m                for (SubcolumnValue value : column.getValues()) {[m
[32m+[m[32m                    value.setTarget((float) Math.random() * 100);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private class ValueTouchListener implements ColumnChartOnValueSelectListener {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onValueSelected(int i, int i1, SubcolumnValue subcolumnValue) {[m
[32m+[m[32m                Toast.makeText(getActivity(), "Selected: " + subcolumnValue, Toast.LENGTH_SHORT).show();[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onValueDeselected() {[m
[32m+[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {[m
[32m+[m[32m            inflater.inflate(R.menu.column_chart, menu);[m
[32m+[m[32m            super.onCreateOptionsMenu(menu, inflater);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public boolean onOptionsItemSelected(MenuItem item) {[m
[32m+[m[32m            int id = item.getItemId();[m
[32m+[m[32m            if (id == R.id.action_reset) {[m
[32m+[m[32m                reset();[m
[32m+[m[32m                generateData();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_subcolumns) {[m
[32m+[m[32m                dataType = SUBCOLUMNS_DATA;[m
[32m+[m[32m                generateData();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_stacked) {[m
[32m+[m[32m                dataType = STACKED_DATA;[m
[32m+[m[32m                generateData();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_negative_subcolumns) {[m
[32m+[m[32m                dataType = NEGATIVE_SUBCOLUMNS_DATA;[m
[32m+[m[32m                generateData();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_negative_stacked) {[m
[32m+[m[32m                dataType = NEGATIVE_STACKED_DATA;[m
[32m+[m[32m                generateData();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_toggle_labels) {[m
[32m+[m[32m                toggleLabels();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_toggle_axes) {[m
[32m+[m[32m                toggleAxes();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_toggle_axes_names) {[m
[32m+[m[32m                toggleAxesNames();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_animate) {[m
[32m+[m[32m                prepareDataAnimation();[m
[32m+[m[32m                mColumnchart.startDataAnimation();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_toggle_selection_mode) {[m
[32m+[m[32m                toggleLabelForSelected();[m
[32m+[m
[32m+[m[32m                Toast.makeText(getActivity(),[m
[32m+[m[32m                        "Selection mode set to " + mColumnchart.isValueSelectionEnabled() + " select any point.",[m
[32m+[m[32m                        Toast.LENGTH_SHORT).show();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_toggle_touch_zoom) {[m
[32m+[m[32m                mColumnchart.setZoomEnabled(!mColumnchart.isZoomEnabled());[m
[32m+[m[32m                Toast.makeText(getActivity(), "IsZoomEnabled " + mColumnchart.isZoomEnabled(), Toast.LENGTH_SHORT).show();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_zoom_both) {[m
[32m+[m[32m                mColumnchart.setZoomType(ZoomType.HORIZONTAL_AND_VERTICAL);[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_zoom_horizontal) {[m
[32m+[m[32m                mColumnchart.setZoomType(ZoomType.HORIZONTAL);[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (id == R.id.action_zoom_vertical) {[m
[32m+[m[32m                mColumnchart.setZoomType(ZoomType.VERTICAL);[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m
[32m+[m[32m            return super.onOptionsItemSelected(item);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/chart/HelloChartActivity.java b/app/src/main/java/com/example/superdemo/chart/HelloChartActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..fe9cbd3[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/chart/HelloChartActivity.java[m
[36m@@ -0,0 +1,310 @@[m
[32m+[m[32mpackage com.example.superdemo.chart;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.graphics.Color;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.support.annotation.Nullable;[m
[32m+[m[32mimport android.support.v4.app.Fragment;[m
[32m+[m[32mimport android.support.v7.app.AppCompatActivity;[m
[32m+[m[32mimport android.support.v7.widget.Toolbar;[m
[32m+[m[32mimport android.view.LayoutInflater;[m
[32m+[m[32mimport android.view.Menu;[m
[32m+[m[32mimport android.view.MenuItem;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.widget.AdapterView;[m
[32m+[m[32mimport android.widget.ArrayAdapter;[m
[32m+[m[32mimport android.widget.FrameLayout;[m
[32m+[m[32mimport android.widget.ListView;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32mimport com.example.superdemo.R;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport butterknife.BindView;[m
[32m+[m[32mimport butterknife.ButterKnife;[m
[32m+[m[32mimport lecho.lib.hellocharts.gesture.ContainerScrollType;[m
[32m+[m[32mimport lecho.lib.hellocharts.gesture.ZoomType;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.Line;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.LineChartData;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.PointValue;[m
[32m+[m[32mimport lecho.lib.hellocharts.view.AbstractChartView;[m
[32m+[m[32mimport lecho.lib.hellocharts.view.LineChartView;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * HelloChartActivity 图表[m
[32m+[m[32m */[m
[32m+[m[32mpublic class HelloChartActivity extends AppCompatActivity {[m
[32m+[m
[32m+[m[32m    @BindView(R.id.linechart)[m
[32m+[m[32m    LineChartView mLinechart;[m
[32m+[m[32m    @BindView(R.id.toolbar)[m
[32m+[m[32m    Toolbar mToolbar;[m
[32m+[m
[32m+[m[32m    public enum ChartType {[m
[32m+[m[32m        LINE_CHART, COLUMN_CHART, PIE_CHART, BUBBLE_CHART, PREVIEW_LINE_CHART, PREVIEW_COLUMN_CHART, OTHER[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onCreate(@Nullable Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m
[32m+[m[32m        setContentView(R.layout.activity_hellochart);[m
[32m+[m[32m        ButterKnife.bind(this);[m
[32m+[m
[32m+[m[32m        if (savedInstanceState == null) {[m
[32m+[m[32m            getSupportFragmentManager().beginTransaction().add(R.id.content, new PlaceholderFragment()).commit();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        initView();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onCreateOptionsMenu(Menu menu) {[m
[32m+[m[32m        getMenuInflater().inflate(R.menu.main, menu);[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onOptionsItemSelected(MenuItem item) {[m
[32m+[m[32m        int id = item.getItemId();[m
[32m+[m[32m        if (id == R.id.action_about) {[m
[32m+[m[32m//            Intent intent = new Intent(this, WaUIActivity.class);[m
[32m+[m[32m//            startActivity(intent);[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        return super.onOptionsItemSelected(item);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void initView() {[m
[32m+[m[32m        setSupportActionBar(mToolbar);[m
[32m+[m[32m        getSupportActionBar().setDisplayShowTitleEnabled(false);[m
[32m+[m[32m        mToolbar.setTitle(getResources().getString(R.string.line_chart));[m
[32m+[m[32m        mToolbar.setNavigationIcon(R.mipmap.back);[m
[32m+[m
[32m+[m[32m        mToolbar.setNavigationOnClickListener(new View.OnClickListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onClick(View v) {[m
[32m+[m[32m                finish();[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        setLineChart();[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void setLineChart() {[m
[32m+[m
[32m+[m[32m        mLinechart.setInteractive(true);[m
[32m+[m[32m        mLinechart.setZoomType(ZoomType.VERTICAL);[m
[32m+[m[32m        mLinechart.setContainerScrollEnabled(true, ContainerScrollType.VERTICAL);[m
[32m+[m
[32m+[m[32m//        ChartData.setAxisXBottom(Axis axisX);[m
[32m+[m[32m//        ColumnChartData.setStacked(boolean isStacked);[m
[32m+[m[32m//        Line.setStrokeWidth(int strokeWidthDp);[m
[32m+[m
[32m+[m[32m        List<PointValue> values = new ArrayList<>();[m
[32m+[m[32m        values.add(new PointValue(0, 2));[m
[32m+[m[32m        values.add(new PointValue(1, 4));[m
[32m+[m[32m        values.add(new PointValue(2, 3));[m
[32m+[m[32m        values.add(new PointValue(3, 4));[m
[32m+[m
[32m+[m[32m        //In most cased you can call data model methods in builder-pattern-like manner.[m
[32m+[m[32m        Line line = new Line(values).setColor(Color.BLUE).setCubic(true);[m
[32m+[m[32m        List<Line> lines = new ArrayList<>();[m
[32m+[m[32m        lines.add(line);[m
[32m+[m
[32m+[m[32m        LineChartData data = new LineChartData();[m
[32m+[m[32m        data.setLines(lines);[m
[32m+[m
[32m+[m[32m//        LineChartView chart = new LineChartView(getApplicationContext());[m
[32m+[m[32m        mLinechart.setLineChartData(data);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static class PlaceholderFragment extends Fragment implements AdapterView.OnItemClickListener {[m
[32m+[m
[32m+[m[32m        @BindView(android.R.id.list)[m
[32m+[m[32m        ListView mListView;[m
[32m+[m[32m        ChartSamplesAdapter mAdapter;[m
[32m+[m
[32m+[m[32m        public PlaceholderFragment() {[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Nullable[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {[m
[32m+[m
[32m+[m[32m            View rootView = inflater.inflate(R.layout.fragment_main, container, false);[m
[32m+[m[32m            ButterKnife.bind(this, rootView);[m
[32m+[m[32m            mAdapter = new ChartSamplesAdapter(getActivity(), 0, generateSamplesDescriptions());[m
[32m+[m[32m            mListView.setAdapter(mAdapter);[m
[32m+[m[32m            mListView.setOnItemClickListener(this);[m
[32m+[m[32m            return rootView;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {[m
[32m+[m[32m            Intent intent;[m
[32m+[m
[32m+[m[32m            switch (position) {[m
[32m+[m[32m                case 0:[m
[32m+[m[32m                    // Line Chart;[m
[32m+[m[32m                    intent = new Intent(getActivity(), LineChartActivity.class);[m
[32m+[m[32m                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 1:[m
[32m+[m[32m                    // Column Chart;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), ColumnChartActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 2:[m
[32m+[m[32m                    // Pie Chart;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), PieChartActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 3:[m
[32m+[m[32m                    // Bubble Chart;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), BubbleChartActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 4:[m
[32m+[m[32m                    // Preview Line Chart;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), PreviewLineChartActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 5:[m
[32m+[m[32m                    // Preview Column Chart;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), PreviewColumnChartActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 6:[m
[32m+[m[32m                    // Combo Chart;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), ComboLineColumnChartActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 7:[m
[32m+[m[32m                    // Line Column Dependency;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), LineColumnDependencyActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 8:[m
[32m+[m[32m                    // Tempo line chart;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), TempoChartActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 9:[m
[32m+[m[32m                    // Speed line chart;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), SpeedChartActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 10:[m
[32m+[m[32m                    // Good Bad filled line chart;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), GoodBadChartActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case 11:[m
[32m+[m[32m                    // Good Bad filled line chart;[m
[32m+[m[32m//                    intent = new Intent(getActivity(), ViewPagerChartsActivity.class);[m
[32m+[m[32m//                    startActivity(intent);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                default:[m
[32m+[m[32m                    break;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private List<ChartSampleDescription> generateSamplesDescriptions() {[m
[32m+[m[32m            List<ChartSampleDescription> list = new ArrayList<>();[m
[32m+[m
[32m+[m[32m            list.add(new ChartSampleDescription("Line Chart", "", ChartType.LINE_CHART));[m
[32m+[m[32m            list.add(new ChartSampleDescription("Column Chart", "", ChartType.COLUMN_CHART));[m
[32m+[m[32m            list.add(new ChartSampleDescription("Pie Chart", "", ChartType.PIE_CHART));[m
[32m+[m[32m            list.add(new ChartSampleDescription("Bubble Chart", "", ChartType.BUBBLE_CHART));[m
[32m+[m[32m            list.add(new ChartSampleDescription("Preview Line Chart",[m
[32m+[m[32m                    "Control line chart viewport with another line chart.", ChartType.PREVIEW_LINE_CHART));[m
[32m+[m[32m            list.add(new ChartSampleDescription("Preview Column Chart",[m
[32m+[m[32m                    "Control column chart viewport with another column chart.", ChartType.PREVIEW_COLUMN_CHART));[m
[32m+[m[32m            list.add(new ChartSampleDescription("Combo Line/Column Chart", "Combo chart with lines and columns.",[m
[32m+[m[32m                    ChartType.OTHER));[m
[32m+[m[32m            list.add(new ChartSampleDescription("Line/Column Chart Dependency",[m
[32m+[m[32m                    "LineChart responds(with animation) to column chart value selection.", ChartType.OTHER));[m
[32m+[m[32m            list.add(new ChartSampleDescription([m
[32m+[m[32m                    "Tempo Chart",[m
[32m+[m[32m                    "Presents tempo and height values on a signle chart. Example of multiple axes and reverted Y axis" +[m
[32m+[m[32m                            " with time format [mm:ss].",[m
[32m+[m[32m                    ChartType.OTHER));[m
[32m+[m[32m            list.add(new ChartSampleDescription("Speed Chart",[m
[32m+[m[32m                    "Presents speed and height values on a signle chart. Exapmle of multiple axes inside chart area.",[m
[32m+[m[32m                    ChartType.OTHER));[m
[32m+[m[32m            list.add(new ChartSampleDescription("Good/Bad Chart",[m
[32m+[m[32m                    "Example of filled area line chart with custom labels", ChartType.OTHER));[m
[32m+[m[32m            list.add(new ChartSampleDescription("ViewPager with Charts",[m
[32m+[m[32m                    "Interactive charts within ViewPager. Each chart can be zoom/scroll except pie chart.",[m
[32m+[m[32m                    ChartType.OTHER));[m
[32m+[m
[32m+[m[32m            return list;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static class ChartSamplesAdapter extends ArrayAdapter<ChartSampleDescription> {[m
[32m+[m
[32m+[m[32m        public ChartSamplesAdapter(Context context, int resource, List<ChartSampleDescription> objects) {[m
[32m+[m[32m            super(context, resource, objects);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public View getView(int position, View convertView, ViewGroup parent) {[m
[32m+[m[32m            ViewHolder viewHolder;[m
[32m+[m[32m            if (convertView == null) {[m
[32m+[m[32m                convertView = LayoutInflater.from(getContext()).inflate(R.layout.list_item_sample, parent, false);[m
[32m+[m[32m                viewHolder = new ViewHolder(convertView);[m
[32m+[m[32m                convertView.setTag(viewHolder);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                viewHolder = (ViewHolder) convertView.getTag();[m
[32m+[m[32m            }[m
[32m+[m[32m            ChartSampleDescription item = getItem(position);[m
[32m+[m
[32m+[m[32m            viewHolder.chartLayout.setVisibility(View.VISIBLE);[m
[32m+[m[32m            viewHolder.chartLayout.removeAllViews();[m
[32m+[m
[32m+[m[32m            AbstractChartView chart;[m
[32m+[m[32m            switch (item.chartType) {[m
[32m+[m[32m                case LINE_CHART:[m
[32m+[m[32m                    chart = new LineChartView(getContext());[m
[32m+[m[32m                    viewHolder.chartLayout.addView(chart);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            return convertView;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        static class ViewHolder {[m
[32m+[m[32m            @BindView(R.id.text1)[m
[32m+[m[32m            TextView text1;[m
[32m+[m[32m            @BindView(R.id.text2)[m
[32m+[m[32m            TextView text2;[m
[32m+[m[32m            @BindView(R.id.chart_layout)[m
[32m+[m[32m            FrameLayout chartLayout;[m
[32m+[m
[32m+[m[32m            ViewHolder(View view) {[m
[32m+[m[32m                ButterKnife.bind(this, view);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    public static class ChartSampleDescription {[m
[32m+[m[32m        String text1;[m
[32m+[m[32m        String text2;[m
[32m+[m[32m        ChartType chartType;[m
[32m+[m
[32m+[m[32m        public ChartSampleDescription(String text1, String text2, ChartType chartType) {[m
[32m+[m[32m            this.text1 = text1;[m
[32m+[m[32m            this.text2 = text2;[m
[32m+[m[32m            this.chartType = chartType;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/chart/LineChartActivity.java b/app/src/main/java/com/example/superdemo/chart/LineChartActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f63d42e[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/chart/LineChartActivity.java[m
[36m@@ -0,0 +1,471 @@[m
[32m+[m[32mpackage com.example.superdemo.chart;[m
[32m+[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.support.annotation.Nullable;[m
[32m+[m[32mimport android.support.v4.app.Fragment;[m
[32m+[m[32mimport android.support.v7.app.AppCompatActivity;[m
[32m+[m[32mimport android.support.v7.widget.Toolbar;[m
[32m+[m[32mimport android.view.LayoutInflater;[m
[32m+[m[32mimport android.view.Menu;[m
[32m+[m[32mimport android.view.MenuInflater;[m
[32m+[m[32mimport android.view.MenuItem;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.widget.FrameLayout;[m
[32m+[m[32mimport android.widget.Toast;[m
[32m+[m
[32m+[m[32mimport com.example.superdemo.R;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport butterknife.BindView;[m
[32m+[m[32mimport butterknife.ButterKnife;[m
[32m+[m[32mimport lecho.lib.hellocharts.animation.ChartAnimationListener;[m
[32m+[m[32mimport lecho.lib.hellocharts.gesture.ZoomType;[m
[32m+[m[32mimport lecho.lib.hellocharts.listener.LineChartOnValueSelectListener;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.Axis;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.Line;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.LineChartData;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.PointValue;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.ValueShape;[m
[32m+[m[32mimport lecho.lib.hellocharts.model.Viewport;[m
[32m+[m[32mimport lecho.lib.hellocharts.util.ChartUtils;[m
[32m+[m[32mimport lecho.lib.hellocharts.view.LineChartView;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * LineChartActivity[m
[32m+[m[32m */[m
[32m+[m[32mpublic class LineChartActivity extends AppCompatActivity {[m
[32m+[m[32m    @BindView(R.id.container)[m
[32m+[m[32m    FrameLayout container;[m
[32m+[m
[32m+[m[32m    private PlaceholderFragment mFragment = new PlaceholderFragment();[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onCreate(@Nullable Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m
[32m+[m[32m        setContentView(R.layout.activity_line_chart);[m
[32m+[m[32m        ButterKnife.bind(this);[m
[32m+[m
[32m+[m[32m        if (savedInstanceState == null) {[m
[32m+[m[32m            getSupportFragmentManager().beginTransaction().add(R.id.container, mFragment).commit();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static class PlaceholderFragment extends Fragment {[m
[32m+[m
[32m+[m[32m        @BindView(R.id.chart)[m
[32m+[m[32m        LineChartView mLinechart;[m
[32m+[m[32m        @BindView(R.id.toolbar)[m
[32m+[m[32m        Toolbar mToolbar;[m
[32m+[m[32m        AppCompatActivity compatActivity;[m
[32m+[m
[32m+[m[32m        private LineChartData data;[m
[32m+[m[32m        private int numberOfLines = 1;[m
[32m+[m[32m        private int maxNumberOfLines = 4;[m
[32m+[m[32m        private int numberOfPoints = 12;[m
[32m+[m
[32m+[m[32m        float[][] randomNumbersTab = new float[maxNumberOfLines][numberOfPoints];[m
[32m+[m
[32m+[m[32m        private boolean hasAxes = true;[m
[32m+[m[32m        private boolean hasAxesNames = true;[m
[32m+[m[32m        private boolean hasLines = true;[m
[32m+[m[32m        private boolean hasPoints = true;[m
[32m+[m[32m        private ValueShape shape = ValueShape.CIRCLE;[m
[32m+[m[32m        private boolean isFilled = false;[m
[32m+[m[32m        private boolean hasLabels = false;[m
[32m+[m[32m        private boolean isCubic = false;[m
[32m+[m[32m        private boolean hasLabelForSelected = false;[m
[32m+[m[32m        private boolean pointsHaveDifferentColor;[m
[32m+[m
[32m+[m[32m        @Nullable[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {[m
[32m+[m[32m            View rootView = inflater.inflate(R.layout.fragment_line_chart, container, false);[m
[32m+[m
[32m+[m[32m            ButterKnife.bind(this, rootView);[m
[32m+[m[32m            compatActivity = (AppCompatActivity) getActivity();[m
[32m+[m[32m            compatActivity.setSupportActionBar(mToolbar);[m
[32m+[m[32m            setHasOptionsMenu(true);[m
[32m+[m
[32m+[m[32m            mLinechart.setOnValueTouchListener(new ValueTouchListener());[m
[32m+[m
[32m+[m[32m            // Generate some random values.[m
[32m+[m[32m            generateValues();[m
[32m+[m
[32m+[m[32m            generateData();[m
[32m+[m
[32m+[m[32m            // Disable viewport recalculations, see toggleCubic() method for more info.[m
[32m+[m[32m            mLinechart.setViewportCalculationEnabled(false);[m
[32m+[m
[32m+[m[32m            resetViewport();[m
[32m+[m
[32m+[m[32m            return rootView;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m
[32m+[m[32m        private void generateValues() {[m
[32m+[m[32m            for (int i = 0; i < maxNumberOfLines; ++i) {[m
[32m+[m[32m                for (int j = 0; j < numberOfPoints; ++j) {[m
[32m+[m[32m                    randomNumbersTab[i][j] = (float) Math.random() * 100f;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        //line data[m
[32m+[m[32m        private void generateData() {[m
[32m+[m[32m            List<Line> lists = new ArrayList<>();[m
[32m+[m
[32m+[m[32m            for (int i = 0; i < maxNumberOfLines; i++) {[m
[32m+[m[32m                List<PointValue> values = new ArrayList<>();[m
[32m+[m[32m                for (int j = 0; j < numberOfPoints; ++j) {[m
[32m+[m[32m                    values.add(new PointValue(j, randomNumbersTab[i][j]));[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                Line line = new Line(values);[m
[32m+[m[32m                line.setColor(ChartUtils.COLORS[i]);[m
[32m+[m[32m                line.setShape(shape);[m
[32m+[m[32m                line.setCubic(isCubic);[m
[32m+[m[32m                line.setFilled(isFilled);[m
[32m+[m[32m                line.setHasLabels(hasLabels);[m
[32m+[m[32m                line.setHasLabelsOnlyForSelected(hasLabelForSelected);[m
[32m+[m[32m                line.setHasLines(hasLines);[m
[32m+[m[32m                line.setHasPoints(hasPoints);[m
[32m+[m
[32m+[m[32m                if (pointsHaveDifferentColor) {[m
[32m+[m[32m                    line.setPointColor(ChartUtils.COLORS[(i + 1) % ChartUtils.COLORS.length]);[m
[32m+[m[32m                }[m
[32m+[m[32m                lists.add(line);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            data = new LineChartData(lists);[m
[32m+[m
[32m+[m[32m            if (hasAxes) {[m
[32m+[m[32m                Axis axisX = new Axis();[m
[32m+[m[32m                Axis axisY = new Axis().setHasLines(true);[m
[32m+[m[32m                if (hasAxesNames) {[m
[32m+[m[32m                    axisX.setName("Axis X");[m
[32m+[m[32m                    axisY.setName("Axis Y");[m
[32m+[m[32m                }[m
[32m+[m[32m                data.setAxisXBottom(axisX);[m
[32m+[m[32m                data.setAxisYLeft(axisY);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                data.setAxisXBottom(null);[m
[32m+[m[32m                data.setAxisYLeft(null);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            data.setBaseValue(Float.NEGATIVE_INFINITY);[m
[32m+[m[32m            mLinechart.setLineChartData(data);[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void resetViewport() {[m
[32m+[m[32m            // Reset viewport height range to (0,100)[m
[32m+[m[32m            final Viewport v = new Viewport(mLinechart.getMaximumViewport());[m
[32m+[m[32m            v.bottom = 0;[m
[32m+[m[32m            v.top = 100;[m
[32m+[m[32m            v.left = 0;[m
[32m+[m[32m            v.right = numberOfPoints - 1;[m
[32m+[m[32m            mLinechart.setMaximumViewport(v);[m
[32m+[m[32m            mLinechart.setCurrentViewport(v);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void reset() {[m
[32m+[m[32m            numberOfLines = 1;[m
[32m+[m
[32m+[m[32m            hasAxes = true;[m
[32m+[m[32m            hasAxesNames = true;[m
[32m+[m[32m            hasLines = true;[m
[32m+[m[32m            hasPoints = true;[m
[32m+[m[32m            shape = ValueShape.CIRCLE;[m
[32m+[m[32m            isFilled = false;[m
[32m+[m[32m            hasLabels = false;[m
[32m+[m[32m            isCubic = false;[m
[32m+[m[32m            hasLabelForSelected = false;[m
[32m+[m[32m            pointsHaveDifferentColor = false;[m
[32m+[m
[32m+[m[32m            mLinechart.setValueSelectionEnabled(hasLabelForSelected);[m
[32m+[m[32m            resetViewport();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Adds lines to data, after that data should be set again with[m
[32m+[m[32m         * {@link LineChartView#setLineChartData(LineChartData)}. Last 4th line has non-monotonically x values.[m
[32m+[m[32m         */[m
[32m+[m[32m        private void addLineToData() {[m
[32m+[m[32m            if (data.getLines().size() >= maxNumberOfLines) {[m
[32m+[m[32m                Toast.makeText(getActivity(), "Samples app uses max 4 lines!", Toast.LENGTH_SHORT).show();[m
[32m+[m[32m                return;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                ++numberOfLines;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleLines() {[m
[32m+[m[32m            hasLines = !hasLines;[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void togglePoints() {[m
[32m+[m[32m            hasPoints = !hasPoints;[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleCubic() {[m
[32m+[m[32m            isCubic = !isCubic;[m
[32m+[m[32m            generateData();[m
[32m+[m
[32m+[m[32m            if (isCubic) {[m
[32m+[m[32m                // It is good idea to manually set a little higher max viewport for cubic lines because sometimes line[m
[32m+[m[32m                // go above or below max/min. To do that use Viewport.inest() method and pass negative value as dy[m
[32m+[m[32m                // parameter or just set top and bottom values manually.[m
[32m+[m[32m                // In this example I know that Y values are within (0,100) range so I set viewport height range manually[m
[32m+[m[32m                // to (-5, 105).[m
[32m+[m[32m                // To make this works during animations you should use Chart.setViewportCalculationEnabled(false) before[m
[32m+[m[32m                // modifying viewport.[m
[32m+[m[32m                // Remember to set viewport after you call setLineChartData().[m
[32m+[m[32m                final Viewport v = new Viewport(mLinechart.getMaximumViewport());[m
[32m+[m[32m                v.bottom = -5;[m
[32m+[m[32m                v.top = 105;[m
[32m+[m[32m                // You have to set max and current viewports separately.[m
[32m+[m[32m                mLinechart.setMaximumViewport(v);[m
[32m+[m[32m                // I changing current viewport with animation in this case.[m
[32m+[m[32m                mLinechart.setCurrentViewportWithAnimation(v);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                // If not cubic restore viewport to (0,100) range.[m
[32m+[m[32m                final Viewport v = new Viewport(mLinechart.getMaximumViewport());[m
[32m+[m[32m                v.bottom = 0;[m
[32m+[m[32m                v.top = 100;[m
[32m+[m
[32m+[m[32m                // You have to set max and current viewports separately.[m
[32m+[m[32m                // In this case, if I want animation I have to set current viewport first and use animation listener.[m
[32m+[m[32m                // Max viewport will be set in onAnimationFinished method.[m
[32m+[m[32m                mLinechart.setViewportAnimationListener(new ChartAnimationListener() {[m
[32m+[m[32m                    @Override[m
[32m+[m[32m                    public void onAnimationStarted() {[m
[32m+[m
[32m+[m[32m                    }[m
[32m+[m
[32m+[m[32m                    @Override[m
[32m+[m[32m                    public void onAnimationFinished() {[m
[32m+[m[32m                        // Set max viewpirt and remove listener.[m
[32m+[m[32m                        mLinechart.setMaximumViewport(v);[m
[32m+[m[32m                        mLinechart.setViewportAnimationListener(null);[m
[32m+[m[32m                    }[m
[32m+[m[32m                });[m
[32m+[m
[32m+[m[32m                mLinechart.setCurrentViewportWithAnimation(v);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleFilled() {[m
[32m+[m[32m            isFilled = !isFilled;[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void togglePointColor() {[m
[32m+[m[32m            pointsHaveDifferentColor = !pointsHaveDifferentColor;[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void setCircles() {[m
[32m+[m[32m            shape = ValueShape.CIRCLE;[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void setSquares() {[m
[32m+[m[32m            shape = ValueShape.SQUARE;[m
[32m+[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void setDiamonds() {[m
[32m+[m[32m            shape = ValueShape.DIAMOND;[m
[32m+[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleLabels() {[m
[32m+[m[32m            hasLabels = !hasLabels;[m
[32m+[m
[32m+[m[32m            if (hasLabels) {[m
[32m+[m[32m                hasLabelForSelected = false;[m
[32m+[m[32m                mLinechart.setValueSelectionEnabled(hasLabelForSelected);[m
[32m+[m[32m            }[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleLabelForSelected() {[m
[32m+[m[32m            hasLabelForSelected = !hasLabelForSelected;[m
[32m+[m
[32m+[m[32m            mLinechart.setValueSelectionEnabled(hasLabelForSelected);[m
[32m+[m
[32m+[m[32m            if (hasLabelForSelected) {[m
[32m+[m[32m                hasLabels = false;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleAxes() {[m
[32m+[m[32m            hasAxes = !hasAxes;[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private void toggleAxesNames() {[m
[32m+[m[32m            hasAxesNames = !hasAxesNames;[m
[32m+[m[32m            generateData();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * To animate values you have to change targets values and then call { Chart#startDataAnimation()}[m
[32m+[m[32m         * method(don't confuse with View.animate()). If you operate on data that was set before you don't have to call[m
[32m+[m[32m         * {@link LineChartView#setLineChartData(LineChartData)} again.[m
[32m+[m[32m         */[m
[32m+[m[32m        private void prepareDataAnimation() {[m
[32m+[m[32m            for (Line line : data.getLines()) {[m
[32m+[m[32m                for (PointValue value : line.getValues()) {[m
[32m+[m[32m                    // Here I modify target only for Y values but it is OK to modify X targets as well.[m
[32m+[m[32m                    value.setTarget(value.getX(), (float) Math.random() * 100);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private class ValueTouchListener implements LineChartOnValueSelectListener {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onValueSelected(int lineIndex, int pointIndex, PointValue pointValue) {[m
[32m+[m[32m                Toast.makeText(getActivity(), "Selected: " + pointValue, Toast.LENGTH_SHORT).show();[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onValueDeselected() {[m
[32m+[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {[m
[32m+[m[32m            inflater.inflate(R.menu.line_chart, menu);[m
[32m+[m[32m            super.onCreateOptionsMenu(menu, inflater);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public boolean onOptionsItemSelected(MenuItem item) {[m
[32m+[m[32m            int id = item.getItemId();[m
[32m+[m[32m            switch (id) {[m
[32m+[m[32m                case R.id.action_reset:[m
[32m+[m[32m                    generateValues();[m
[32m+[m[32m                    reset();[m
[32m+[m[32m                    generateData();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_add_line:[m
[32m+[m[32m                    addLineToData();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_toggle_lines:[m
[32m+[m[32m                    //隐藏线[m
[32m+[m[32m                    toggleLines();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_toggle_points:[m
[32m+[m[32m                    //隐藏点[m
[32m+[m[32m                    togglePoints();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_toggle_cubic:[m
[32m+[m[32m                    //改变连线状态[m
[32m+[m[32m                    toggleCubic();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_toggle_area:[m
[32m+[m[32m                    //填充颜色[m
[32m+[m[32m                    toggleFilled();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_point_color:[m
[32m+[m[32m                    //改变圆点颜色[m
[32m+[m[32m                    togglePointColor();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_shape_circles:[m
[32m+[m[32m                    //设置圆点形状--圆形[m
[32m+[m[32m                    setCircles();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_shape_square:[m
[32m+[m[32m                    //设置圆点形状--方形[m
[32m+[m[32m                    setSquares();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_shape_diamond:[m
[32m+[m[32m                    //设置圆点形状--菱形[m
[32m+[m[32m                    setDiamonds();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_toggle_labels:[m
[32m+[m[32m                    //显示每个点的值(Labels)[m
[32m+[m[32m                    toggleLabels();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_toggle_axes:[m
[32m+[m[32m                    //显示隐藏Ax[m
[32m+[m[32m                    toggleAxes();[m
[32m+[m[32m                    break;[m
[32m+[m[32m                case R.id.action_toggle_axes_names:[m
[32m+[m[32m                    //设置xy轴的Ax name显示隐藏[m
[32m+[m[32m                    toggleAxesNames();[m
[32m+[m[32m                    break;[m
[32m+[m
[32m+[m[32m                case R.id.action_animate:[m
[32m+[m[32m                    //动态变更数据[m
[32m+[m[32m                    prepareDataAnimation();[m
[32m+[m[32m                    mLinechart.startDataAnimation();[m
[32m+[m[32m                    break;[m
[32m+[m
[32m+[m[32m                case R.id.action_toggle_selection_mode:[m
[32m+[m[32m                    //是否保持选中点的状态[m
[32m+[m[32m                    toggleLabelForSelected();[m
[32m+[m
[32m+[m[32m                    Toast.makeText(getActivity(),[m
[32m+[m[32m                            "Selection mode set to " + mLinechart.isValueSelectionEnabled() + " select any point.",[m
[32m+[m[32m                            Toast.LENGTH_SHORT).show();[m
[32m+[m[32m                    break;[m
[32m+[m
[32m+[m[32m                case R.id.action_toggle_touch_zoom:[m
[32m+[m[32m                    //设置是否可以放大缩小[m
[32m+[m[32m                    mLinechart.setZoomEnabled(!mLinechart.isZoomEnabled());[m
[32m+[m[32m                    Toast.makeText(getActivity(), "IsZoomEnabled " + mLinechart.isZoomEnabled(), Toast.LENGTH_SHORT).show();[m
[32m+[m[32m                    break;[m
[32m+[m
[32m+[m[32m                case R.id.action_zoom_both:[m
[32m+[m[32m                    //设置两个方向都可以升缩[m
[32m+[m[32m                    mLinechart.setZoomType(ZoomType.HORIZONTAL_AND_VERTICAL);[m
[32m+[m[32m                    break;[m
[32m+[m
[32m+[m[32m                case R.id.action_zoom_horizontal:[m
[32m+[m[32m                    //设置水平升缩[m
[32m+[m[32m                    mLinechart.setZoomType(ZoomType.HORIZONTAL);[m
[32m+[m[32m                    break;[m
[32m+[m
[32m+[m[32m                case R.id.action_zoom_vertical:[m
[32m+[m[32m                    //设置垂直升缩[m
[32m+[m[32m                    mLinechart.setZoomType(ZoomType.VERTICAL);[m
[32m+[m[32m                    break;[m
[32m+[m[32m            }[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m//    @Override[m
[32m+[m[32m//    public boolean onCreateOptionsMenu(Menu menu) {[m
[32m+[m[32m//        getMenuInflater().inflate(R.menu.line_chart, menu);[m
[32m+[m[32m//        return true;[m
[32m+[m[32m//    }[m
[32m+[m[32m//[m
[32m+[m[32m//    @Override[m
[32m+[m[32m//    public boolean onOptionsItemSelected(MenuItem item) {[m
[32m+[m[32m//        int id = item.getItemId();[m
[32m+[m[32m//        switch (id) {[m
[32m+[m[32m//            case R.id.action_reset:[m
[32m+[m[32m//                mFragment.reset();[m
[32m+[m[32m//                mFragment.generateData();[m
[32m+[m[32m//                break;[m
[32m+[m[32m//        }[m
[32m+[m[32m//        return super.onOptionsItemSelected(item);[m
[32m+[m[32m//    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/refresh/UltraRefreshActivity.java b/app/src/main/java/com/example/superdemo/refresh/UltraRefreshActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..ace8e37[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/refresh/UltraRefreshActivity.java[m
[36m@@ -0,0 +1,121 @@[m
[32m+[m[32mpackage com.example.superdemo.refresh;[m
[32m+[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.support.annotation.Nullable;[m
[32m+[m[32mimport android.support.v7.app.AppCompatActivity;[m
[32m+[m[32mimport android.support.v7.widget.Toolbar;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m
[32m+[m[32mimport com.example.superdemo.R;[m
[32m+[m[32mimport com.example.superdemo.adapter.WangRecycleAdapter;[m
[32m+[m[32mimport com.example.superdemo.model.ItemView;[m
[32m+[m[32mimport com.example.superdemo.ui.swiper.SwipeMenuListView;[m
[32m+[m[32mimport com.example.superdemo.utils.WaConstants;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport butterknife.BindView;[m
[32m+[m[32mimport butterknife.ButterKnife;[m
[32m+[m[32mimport in.srain.cube.views.ptr.PtrClassicFrameLayout;[m
[32m+[m[32mimport in.srain.cube.views.ptr.PtrDefaultHandler;[m
[32m+[m[32mimport in.srain.cube.views.ptr.PtrFrameLayout;[m
[32m+[m[32mimport in.srain.cube.views.ptr.PtrHandler;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Administrator on 2016/6/20.[m
[32m+[m[32m * UltraRefreshActivity[m
[32m+[m[32m */[m
[32m+[m[32mpublic class UltraRefreshActivity extends AppCompatActivity {[m
[32m+[m
[32m+[m
[32m+[m[32m    @BindView(R.id.toolbar)[m
[32m+[m[32m    Toolbar mToolbar;[m
[32m+[m[32m    @BindView(R.id.rotate_header_list_view)[m
[32m+[m[32m    SwipeMenuListView mListView;[m
[32m+[m[32m    @BindView(R.id.rotate_header_grid_view_frame)[m
[32m+[m[32m    PtrClassicFrameLayout mPtrFrame;[m
[32m+[m
[32m+[m[32m    private List<ItemView> mList;[m
[32m+[m[32m    private List<ItemView> list = new ArrayList<>();[m
[32m+[m[32m    WangRecycleAdapter adapter = new WangRecycleAdapter();[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onCreate(@Nullable Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m
[32m+[m[32m        setContentView(R.layout.activity_ulrefresh);[m
[32m+[m[32m        ButterKnife.bind(this);[m
[32m+[m
[32m+[m[32m        setSupportActionBar(mToolbar);[m
[32m+[m[32m        getSupportActionBar().setDisplayShowTitleEnabled(false);[m
[32m+[m[32m        mToolbar.setTitle("ulrefresh");[m
[32m+[m[32m        mToolbar.setNavigationIcon(R.mipmap.back);[m
[32m+[m
[32m+[m[32m        mToolbar.setNavigationOnClickListener(new View.OnClickListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onClick(View v) {[m
[32m+[m[32m                finish();[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        getData();[m
[32m+[m
[32m+[m[32m        adapter.setList(mList);[m
[32m+[m
[32m+[m[32m        mPtrFrame.setLastUpdateTimeRelateObject(this);[m
[32m+[m[32m        mPtrFrame.setPtrHandler(new PtrHandler() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onRefreshBegin(PtrFrameLayout frame) {[m
[32m+[m[32m                updateData();[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public boolean checkCanDoRefresh(PtrFrameLayout frame, View content, View header) {[m
[32m+[m[32m                return PtrDefaultHandler.checkContentCanBePulledDown(frame, content, header);[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        mPtrFrame.postDelayed(new Runnable() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void run() {[m
[32m+[m[32m                mPtrFrame.autoRefresh();[m
[32m+[m[32m            }[m
[32m+[m[32m        }, 100);[m
[32m+[m
[32m+[m[32m//        mGridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {[m
[32m+[m[32m//            @Override[m
[32m+[m[32m//            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {[m
[32m+[m[32m//[m
[32m+[m[32m//            }[m
[32m+[m[32m//        });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void updateData() {[m
[32m+[m[32m        list.clear();[m
[32m+[m[32m        for (int i = 0; i < 20; i++) {[m
[32m+[m[32m            ItemView itemView = new ItemView();[m
[32m+[m[32m            itemView.setTitle("我喜欢的音乐");[m
[32m+[m[32m            itemView.setDescription("758首 播放1796次");[m
[32m+[m[32m            itemView.setImageUrl(WaConstants.imageUrl2);[m
[32m+[m[32m            list.add(itemView);[m
[32m+[m[32m        }[m
[32m+[m[32m        mPtrFrame.refreshComplete();[m
[32m+[m[32m        mList.clear();[m
[32m+[m[32m        mList.addAll(list);[m
[32m+[m[32m        adapter.notifyDataSetChanged();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void getData() {[m
[32m+[m[32m        mList = new ArrayList<>();[m
[32m+[m[32m        for (int i = 0; i < 20; i++) {[m
[32m+[m[32m            ItemView itemView = new ItemView();[m
[32m+[m[32m            itemView.setTitle("我喜欢的音乐");[m
[32m+[m[32m            itemView.setDescription("758首 播放1796次");[m
[32m+[m[32m            itemView.setImageUrl("http://zhuangbi.idagou.com/i/2015-07-07-26c59a95c0ec52dd9b94f62bb0724263.gif");[m
[32m+[m[32m            mList.add(itemView);[m
[32m+[m[32m        }[m
[32m+[m[32m        adapter.setList(mList);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/ui/swiper/BaseSwipListAdapter.java b/app/src/main/java/com/example/superdemo/ui/swiper/BaseSwipListAdapter.java[m
[1mnew file mode 100644[m
[1mindex 0000000..5143383[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/ui/swiper/BaseSwipListAdapter.java[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m/*[m
[32m+[m[32m* The MIT License (MIT)[m
[32m+[m[32m*[m
[32m+[m[32m* Copyright (c) 2015 nimengbo[m
[32m+[m[32m*[m
[32m+[m[32m* Permission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32m* of this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32m* in the Software without restriction, including without limitation the rights[m
[32m+[m[32m* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32m* copies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32m* furnished to do so, subject to the following conditions:[m
[32m+[m[32m*[m
[32m+[m[32m* The above copyright notice and this permission notice shall be included in all[m
[32m+[m[32m* copies or substantial portions of the Software.[m
[32m+[m[32m*[m
[32m+[m[32m* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32m* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32m* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32m* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32m* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32m* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32m* SOFTWARE.[m
[32m+[m[32m*/[m
[32m+[m[32mpackage com.example.superdemo.ui.swiper;[m
[32m+[m
[32m+[m[32mimport android.widget.BaseAdapter;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Abner on 15/11/20.[m
[32m+[m[32m * Email nimengbo@gmail.com[m
[32m+[m[32m * github https://github.com/nimengbo[m
[32m+[m[32m */[m
[32m+[m[32mpublic abstract class BaseSwipListAdapter extends BaseAdapter {[m
[32m+[m
[32m+[m[32m    public boolean getSwipEnableByPosition(int position){[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenu.java b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenu.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8ff8626[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenu.java[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32mpackage com.example.superdemo.ui.swiper;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Administrator on 2016/6/20.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class SwipeMenu {[m
[32m+[m
[32m+[m[32m    private Context mContext;[m
[32m+[m[32m    private List<SwipeMenuItem> mItems;[m
[32m+[m[32m    private int mViewType;[m
[32m+[m
[32m+[m[32m    public SwipeMenu(Context context) {[m
[32m+[m[32m        mContext = context;[m
[32m+[m[32m        mItems = new ArrayList<SwipeMenuItem>();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Context getContext() {[m
[32m+[m[32m        return mContext;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void addMenuItem(SwipeMenuItem item) {[m
[32m+[m[32m        mItems.add(item);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void removeMenuItem(SwipeMenuItem item) {[m
[32m+[m[32m        mItems.remove(item);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public List<SwipeMenuItem> getMenuItems() {[m
[32m+[m[32m        return mItems;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public SwipeMenuItem getMenuItem(int index) {[m
[32m+[m[32m        return mItems.get(index);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getViewType() {[m
[32m+[m[32m        return mViewType;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setViewType(int viewType) {[m
[32m+[m[32m        this.mViewType = viewType;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuAdapter.java b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuAdapter.java[m
[1mnew file mode 100644[m
[1mindex 0000000..49d7d20[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuAdapter.java[m
[36m@@ -0,0 +1,146 @@[m
[32m+[m[32mpackage com.example.superdemo.ui.swiper;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.database.DataSetObserver;[m
[32m+[m[32mimport android.graphics.Color;[m
[32m+[m[32mimport android.graphics.drawable.ColorDrawable;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.widget.ListAdapter;[m
[32m+[m[32mimport android.widget.WrapperListAdapter;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @author baoyz[m
[32m+[m[32m * @date 2014-8-24[m
[32m+[m[32m */[m
[32m+[m[32mpublic class SwipeMenuAdapter implements WrapperListAdapter,[m
[32m+[m[32m        SwipeMenuView.OnSwipeItemClickListener {[m
[32m+[m
[32m+[m[32m    private ListAdapter mAdapter;[m
[32m+[m[32m    private Context mContext;[m
[32m+[m[32m    private SwipeMenuListView.OnMenuItemClickListener onMenuItemClickListener;[m
[32m+[m
[32m+[m[32m    public SwipeMenuAdapter(Context context, ListAdapter adapter) {[m
[32m+[m[32m        mAdapter = adapter;[m
[32m+[m[32m        mContext = context;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int getCount() {[m
[32m+[m[32m        return mAdapter.getCount();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public Object getItem(int position) {[m
[32m+[m[32m        return mAdapter.getItem(position);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public long getItemId(int position) {[m
[32m+[m[32m        return mAdapter.getItemId(position);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public View getView(int position, View convertView, ViewGroup parent) {[m
[32m+[m[32m        SwipeMenuLayout layout = null;[m
[32m+[m[32m        if (convertView == null) {[m
[32m+[m[32m            View contentView = mAdapter.getView(position, convertView, parent);[m
[32m+[m[32m            SwipeMenu menu = new SwipeMenu(mContext);[m
[32m+[m[32m            menu.setViewType(getItemViewType(position));[m
[32m+[m[32m            createMenu(menu);[m
[32m+[m[32m            SwipeMenuView menuView = new SwipeMenuView(menu,[m
[32m+[m[32m                    (SwipeMenuListView) parent);[m
[32m+[m[32m            menuView.setOnSwipeItemClickListener(this);[m
[32m+[m[32m            SwipeMenuListView listView = (SwipeMenuListView) parent;[m
[32m+[m[32m            layout = new SwipeMenuLayout(contentView, menuView,[m
[32m+[m[32m                    listView.getCloseInterpolator(),[m
[32m+[m[32m                    listView.getOpenInterpolator());[m
[32m+[m[32m            layout.setPosition(position);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            layout = (SwipeMenuLayout) convertView;[m
[32m+[m[32m            layout.closeMenu();[m
[32m+[m[32m            layout.setPosition(position);[m
[32m+[m[32m            View view = mAdapter.getView(position, layout.getContentView(),[m
[32m+[m[32m                    parent);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (mAdapter instanceof BaseSwipListAdapter) {[m
[32m+[m[32m            boolean swipEnable = (((BaseSwipListAdapter) mAdapter).getSwipEnableByPosition(position));[m
[32m+[m[32m            layout.setSwipEnable(swipEnable);[m
[32m+[m[32m        }[m
[32m+[m[32m        return layout;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void createMenu(SwipeMenu menu) {[m
[32m+[m[32m        // Test Code[m
[32m+[m[32m        SwipeMenuItem item = new SwipeMenuItem(mContext);[m
[32m+[m[32m        item.setTitle("Item 1");[m
[32m+[m[32m        item.setBackground(new ColorDrawable(Color.GRAY));[m
[32m+[m[32m        item.setWidth(300);[m
[32m+[m[32m        menu.addMenuItem(item);[m
[32m+[m
[32m+[m[32m        item = new SwipeMenuItem(mContext);[m
[32m+[m[32m        item.setTitle("Item 2");[m
[32m+[m[32m        item.setBackground(new ColorDrawable(Color.RED));[m
[32m+[m[32m        item.setWidth(300);[m
[32m+[m[32m        menu.addMenuItem(item);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onItemClick(SwipeMenuView view, SwipeMenu menu, int index) {[m
[32m+[m[32m        if (onMenuItemClickListener != null) {[m
[32m+[m[32m            onMenuItemClickListener.onMenuItemClick(view.getPosition(), menu,[m
[32m+[m[32m                    index);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setOnSwipeItemClickListener([m
[32m+[m[32m            SwipeMenuListView.OnMenuItemClickListener onMenuItemClickListener) {[m
[32m+[m[32m        this.onMenuItemClickListener = onMenuItemClickListener;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void registerDataSetObserver(DataSetObserver observer) {[m
[32m+[m[32m        mAdapter.registerDataSetObserver(observer);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void unregisterDataSetObserver(DataSetObserver observer) {[m
[32m+[m[32m        mAdapter.unregisterDataSetObserver(observer);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean areAllItemsEnabled() {[m
[32m+[m[32m        return mAdapter.areAllItemsEnabled();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean isEnabled(int position) {[m
[32m+[m[32m        return mAdapter.isEnabled(position);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean hasStableIds() {[m
[32m+[m[32m        return mAdapter.hasStableIds();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int getItemViewType(int position) {[m
[32m+[m[32m        return mAdapter.getItemViewType(position);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int getViewTypeCount() {[m
[32m+[m[32m        return mAdapter.getViewTypeCount();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean isEmpty() {[m
[32m+[m[32m        return mAdapter.isEmpty();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public ListAdapter getWrappedAdapter() {[m
[32m+[m[32m        return mAdapter;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuCreator.java b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuCreator.java[m
[1mnew file mode 100644[m
[1mindex 0000000..ad62520[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuCreator.java[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mpackage com.example.superdemo.ui.swiper;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Administrator on 2016/6/20.[m
[32m+[m[32m */[m
[32m+[m[32mpublic interface SwipeMenuCreator {[m
[32m+[m[32m    void create(SwipeMenu menu);[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuItem.java b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuItem.java[m
[1mnew file mode 100644[m
[1mindex 0000000..9ec4ff4[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuItem.java[m
[36m@@ -0,0 +1,91 @@[m
[32m+[m[32mpackage com.example.superdemo.ui.swiper;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.graphics.drawable.Drawable;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Administrator on 2016/6/20.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class SwipeMenuItem {[m
[32m+[m[32m    private int id;[m
[32m+[m[32m    private Context mContext;[m
[32m+[m[32m    private String title;[m
[32m+[m[32m    private Drawable icon;[m
[32m+[m[32m    private Drawable background;[m
[32m+[m[32m    private int titleColor;[m
[32m+[m[32m    private int titleSize;[m
[32m+[m[32m    private int width;[m
[32m+[m
[32m+[m[32m    public SwipeMenuItem(Context context) {[m
[32m+[m[32m        mContext = context;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getId() {[m
[32m+[m[32m        return id;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setId(int id) {[m
[32m+[m[32m        this.id = id;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getTitleColor() {[m
[32m+[m[32m        return titleColor;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getTitleSize() {[m
[32m+[m[32m        return titleSize;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setTitleSize(int titleSize) {[m
[32m+[m[32m        this.titleSize = titleSize;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setTitleColor(int titleColor) {[m
[32m+[m[32m        this.titleColor = titleColor;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getTitle() {[m
[32m+[m[32m        return title;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setTitle(String title) {[m
[32m+[m[32m        this.title = title;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setTitle(int resId) {[m
[32m+[m[32m        setTitle(mContext.getString(resId));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Drawable getIcon() {[m
[32m+[m[32m        return icon;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setIcon(Drawable icon) {[m
[32m+[m[32m        this.icon = icon;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setIcon(int resId) {[m
[32m+[m[32m        this.icon = mContext.getResources().getDrawable(resId);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Drawable getBackground() {[m
[32m+[m[32m        return background;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setBackground(Drawable background) {[m
[32m+[m[32m        this.background = background;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setBackground(int resId) {[m
[32m+[m[32m        this.background = mContext.getResources().getDrawable(resId);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getWidth() {[m
[32m+[m[32m        return width;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setWidth(int width) {[m
[32m+[m[32m        this.width = width;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuLayout.java b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuLayout.java[m
[1mnew file mode 100644[m
[1mindex 0000000..dc27a03[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuLayout.java[m
[36m@@ -0,0 +1,347 @@[m
[32m+[m[32mpackage com.example.superdemo.ui.swiper;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.support.v4.view.GestureDetectorCompat;[m
[32m+[m[32mimport android.support.v4.widget.ScrollerCompat;[m
[32m+[m[32mimport android.util.AttributeSet;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m[32mimport android.util.TypedValue;[m
[32m+[m[32mimport android.view.GestureDetector.OnGestureListener;[m
[32m+[m[32mimport android.view.GestureDetector.SimpleOnGestureListener;[m
[32m+[m[32mimport android.view.MotionEvent;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.animation.Interpolator;[m
[32m+[m[32mimport android.widget.AbsListView;[m
[32m+[m[32mimport android.widget.FrameLayout;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * @author baoyz[m
[32m+[m[32m * @date 2014-8-23[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m */[m
[32m+[m[32mpublic class SwipeMenuLayout extends FrameLayout {[m
[32m+[m
[32m+[m	[32mprivate static final int CONTENT_VIEW_ID = 1;[m
[32m+[m	[32mprivate static final int MENU_VIEW_ID = 2;[m
[32m+[m
[32m+[m	[32mprivate static final int STATE_CLOSE = 0;[m
[32m+[m	[32mprivate static final int STATE_OPEN = 1;[m
[32m+[m
[32m+[m	[32mprivate int mSwipeDirection;[m
[32m+[m
[32m+[m	[32mprivate View mContentView;[m
[32m+[m	[32mprivate SwipeMenuView mMenuView;[m
[32m+[m	[32mprivate int mDownX;[m
[32m+[m	[32mprivate int state = STATE_CLOSE;[m
[32m+[m	[32mprivate GestureDetectorCompat mGestureDetector;[m
[32m+[m	[32mprivate OnGestureListener mGestureListener;[m
[32m+[m	[32mprivate boolean isFling;[m
[32m+[m	[32mprivate int MIN_FLING = dp2px(15);[m
[32m+[m	[32mprivate int MAX_VELOCITYX = -dp2px(500);[m
[32m+[m	[32mprivate ScrollerCompat mOpenScroller;[m
[32m+[m	[32mprivate ScrollerCompat mCloseScroller;[m
[32m+[m	[32mprivate int mBaseX;[m
[32m+[m	[32mprivate int position;[m
[32m+[m	[32mprivate Interpolator mCloseInterpolator;[m
[32m+[m	[32mprivate Interpolator mOpenInterpolator;[m
[32m+[m
[32m+[m	[32mprivate boolean mSwipEnable = true;[m
[32m+[m
[32m+[m	[32mpublic SwipeMenuLayout(View contentView, SwipeMenuView menuView) {[m
[32m+[m		[32mthis(contentView, menuView, null, null);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic SwipeMenuLayout(View contentView, SwipeMenuView menuView,[m
[32m+[m			[32mInterpolator closeInterpolator, Interpolator openInterpolator) {[m
[32m+[m		[32msuper(contentView.getContext());[m
[32m+[m		[32mmCloseInterpolator = closeInterpolator;[m
[32m+[m		[32mmOpenInterpolator = openInterpolator;[m
[32m+[m		[32mmContentView = contentView;[m
[32m+[m		[32mmMenuView = menuView;[m
[32m+[m		[32mmMenuView.setLayout(this);[m
[32m+[m		[32minit();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// private SwipeMenuLayout(Context context, AttributeSet attrs, int[m
[32m+[m	[32m// defStyle) {[m
[32m+[m	[32m// super(context, attrs, defStyle);[m
[32m+[m	[32m// }[m
[32m+[m
[32m+[m	[32mprivate SwipeMenuLayout(Context context, AttributeSet attrs) {[m
[32m+[m		[32msuper(context, attrs);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate SwipeMenuLayout(Context context) {[m
[32m+[m		[32msuper(context);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic int getPosition() {[m
[32m+[m		[32mreturn position;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setPosition(int position) {[m
[32m+[m		[32mthis.position = position;[m
[32m+[m		[32mmMenuView.setPosition(position);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setSwipeDirection(int swipeDirection) {[m
[32m+[m		[32mmSwipeDirection = swipeDirection;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate void init() {[m
[32m+[m		[32msetLayoutParams(new AbsListView.LayoutParams(LayoutParams.MATCH_PARENT,[m
[32m+[m				[32mLayoutParams.WRAP_CONTENT));[m
[32m+[m		[32mmGestureListener = new SimpleOnGestureListener() {[m
[32m+[m			[32m@Override[m
[32m+[m			[32mpublic boolean onDown(MotionEvent e) {[m
[32m+[m				[32misFling = false;[m
[32m+[m				[32mreturn true;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m@Override[m
[32m+[m			[32mpublic boolean onFling(MotionEvent e1, MotionEvent e2,[m
[32m+[m					[32mfloat velocityX, float velocityY) {[m
[32m+[m				[32m// TODO[m
[32m+[m				[32mif (Math.abs(e1.getX() - e2.getX()) > MIN_FLING[m
[32m+[m						[32m&& velocityX < MAX_VELOCITYX) {[m
[32m+[m					[32misFling = true;[m
[32m+[m				[32m}[m
[32m+[m				[32m// Log.i("byz", MAX_VELOCITYX + ", velocityX = " + velocityX);[m
[32m+[m				[32mreturn super.onFling(e1, e2, velocityX, velocityY);[m
[32m+[m			[32m}[m
[32m+[m		[32m};[m
[32m+[m		[32mmGestureDetector = new GestureDetectorCompat(getContext(),[m
[32m+[m				[32mmGestureListener);[m
[32m+[m
[32m+[m		[32m// mScroller = ScrollerCompat.create(getContext(), new[m
[32m+[m		[32m// BounceInterpolator());[m
[32m+[m		[32mif (mCloseInterpolator != null) {[m
[32m+[m			[32mmCloseScroller = ScrollerCompat.create(getContext(),[m
[32m+[m					[32mmCloseInterpolator);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mmCloseScroller = ScrollerCompat.create(getContext());[m
[32m+[m		[32m}[m
[32m+[m		[32mif (mOpenInterpolator != null) {[m
[32m+[m			[32mmOpenScroller = ScrollerCompat.create(getContext(),[m
[32m+[m					[32mmOpenInterpolator);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mmOpenScroller = ScrollerCompat.create(getContext());[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mLayoutParams contentParams = new LayoutParams([m
[32m+[m				[32mLayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);[m
[32m+[m		[32mmContentView.setLayoutParams(contentParams);[m
[32m+[m		[32mif (mContentView.getId() < 1) {[m
[32m+[m			[32mmContentView.setId(CONTENT_VIEW_ID);[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mmMenuView.setId(MENU_VIEW_ID);[m
[32m+[m		[32mmMenuView.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT,[m
[32m+[m				[32mLayoutParams.WRAP_CONTENT));[m
[32m+[m
[32m+[m		[32maddView(mContentView);[m
[32m+[m		[32maddView(mMenuView);[m
[32m+[m
[32m+[m		[32m// if (mContentView.getBackground() == null) {[m
[32m+[m		[32m// mContentView.setBackgroundColor(Color.WHITE);[m
[32m+[m		[32m// }[m
[32m+[m
[32m+[m		[32m// in android 2.x, MenuView height is MATCH_PARENT is not work.[m
[32m+[m		[32m// getViewTreeObserver().addOnGlobalLayoutListener([m
[32m+[m		[32m// new OnGlobalLayoutListener() {[m
[32m+[m		[32m// @Override[m
[32m+[m		[32m// public void onGlobalLayout() {[m
[32m+[m		[32m// setMenuHeight(mContentView.getHeight());[m
[32m+[m		[32m// // getViewTreeObserver()[m
[32m+[m		[32m// // .removeGlobalOnLayoutListener(this);[m
[32m+[m		[32m// }[m
[32m+[m		[32m// });[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onAttachedToWindow() {[m
[32m+[m		[32msuper.onAttachedToWindow();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onSizeChanged(int w, int h, int oldw, int oldh) {[m
[32m+[m		[32msuper.onSizeChanged(w, h, oldw, oldh);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic boolean onSwipe(MotionEvent event) {[m
[32m+[m		[32mmGestureDetector.onTouchEvent(event);[m
[32m+[m		[32mswitch (event.getAction()) {[m
[32m+[m		[32mcase MotionEvent.ACTION_DOWN:[m
[32m+[m			[32mmDownX = (int) event.getX();[m
[32m+[m			[32misFling = false;[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase MotionEvent.ACTION_MOVE:[m
[32m+[m			[32m// Log.i("byz", "downX = " + mDownX + ", moveX = " + event.getX());[m
[32m+[m			[32mint dis = (int) (mDownX - event.getX());[m
[32m+[m			[32mif (state == STATE_OPEN) {[m
[32m+[m				[32mdis += mMenuView.getWidth()*mSwipeDirection;;[m
[32m+[m			[32m}[m
[32m+[m			[32mswipe(dis);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase MotionEvent.ACTION_UP:[m
[32m+[m			[32mif ((isFling || Math.abs(mDownX - event.getX()) > (mMenuView.getWidth() / 2)) &&[m
[32m+[m					[32mMath.signum(mDownX - event.getX()) == mSwipeDirection) {[m
[32m+[m				[32m// open[m
[32m+[m				[32msmoothOpenMenu();[m
[32m+[m			[32m} else {[m
[32m+[m				[32m// close[m
[32m+[m				[32msmoothCloseMenu();[m
[32m+[m				[32mreturn false;[m
[32m+[m			[32m}[m
[32m+[m			[32mbreak;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn true;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic boolean isOpen() {[m
[32m+[m		[32mreturn state == STATE_OPEN;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic boolean onTouchEvent(MotionEvent event) {[m
[32m+[m		[32mreturn super.onTouchEvent(event);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate void swipe(int dis) {[m
[32m+[m		[32mif(!mSwipEnable){[m
[32m+[m			[32mreturn ;[m
[32m+[m		[32m}[m
[32m+[m		[32mif (Math.signum(dis) != mSwipeDirection) {[m
[32m+[m			[32mdis = 0;[m
[32m+[m		[32m} else if (Math.abs(dis) > mMenuView.getWidth()) {[m
[32m+[m			[32mdis = mMenuView.getWidth()*mSwipeDirection;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mmContentView.layout(-dis, mContentView.getTop(),[m
[32m+[m				[32mmContentView.getWidth() -dis, getMeasuredHeight());[m
[32m+[m
[32m+[m		[32mif (mSwipeDirection == SwipeMenuListView.DIRECTION_LEFT) {[m
[32m+[m
[32m+[m			[32mmMenuView.layout(mContentView.getWidth() - dis, mMenuView.getTop(),[m
[32m+[m					[32mmContentView.getWidth() + mMenuView.getWidth() - dis,[m
[32m+[m					[32mmMenuView.getBottom());[m
[32m+[m		[32m} else {[m
[32m+[m			[32mmMenuView.layout(-mMenuView.getWidth() - dis, mMenuView.getTop(),[m
[32m+[m					[32m- dis, mMenuView.getBottom());[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void computeScroll() {[m
[32m+[m		[32mif (state == STATE_OPEN) {[m
[32m+[m			[32mif (mOpenScroller.computeScrollOffset()) {[m
[32m+[m				[32mswipe(mOpenScroller.getCurrX()*mSwipeDirection);[m
[32m+[m				[32mpostInvalidate();[m
[32m+[m			[32m}[m
[32m+[m		[32m} else {[m
[32m+[m			[32mif (mCloseScroller.computeScrollOffset()) {[m
[32m+[m				[32mswipe((mBaseX - mCloseScroller.getCurrX())*mSwipeDirection);[m
[32m+[m				[32mpostInvalidate();[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void smoothCloseMenu() {[m
[32m+[m		[32mstate = STATE_CLOSE;[m
[32m+[m		[32mif (mSwipeDirection == SwipeMenuListView.DIRECTION_LEFT) {[m
[32m+[m			[32mmBaseX = -mContentView.getLeft();[m
[32m+[m			[32mmCloseScroller.startScroll(0, 0, mMenuView.getWidth(), 0, 350);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mmBaseX = mMenuView.getRight();[m
[32m+[m			[32mmCloseScroller.startScroll(0, 0, mMenuView.getWidth(), 0, 350);[m
[32m+[m		[32m}[m
[32m+[m		[32mpostInvalidate();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void smoothOpenMenu() {[m
[32m+[m		[32mif(!mSwipEnable){[m
[32m+[m			[32mreturn ;[m
[32m+[m		[32m}[m
[32m+[m		[32mstate = STATE_OPEN;[m
[32m+[m		[32mif (mSwipeDirection == SwipeMenuListView.DIRECTION_LEFT) {[m
[32m+[m			[32mmOpenScroller.startScroll(-mContentView.getLeft(), 0, mMenuView.getWidth(), 0, 350);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mmOpenScroller.startScroll(mContentView.getLeft(), 0, mMenuView.getWidth(), 0, 350);[m
[32m+[m		[32m}[m
[32m+[m		[32mpostInvalidate();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void closeMenu() {[m
[32m+[m		[32mif (mCloseScroller.computeScrollOffset()) {[m
[32m+[m			[32mmCloseScroller.abortAnimation();[m
[32m+[m		[32m}[m
[32m+[m		[32mif (state == STATE_OPEN) {[m
[32m+[m			[32mstate = STATE_CLOSE;[m
[32m+[m			[32mswipe(0);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void openMenu() {[m
[32m+[m		[32mif(!mSwipEnable){[m
[32m+[m			[32mreturn ;[m
[32m+[m		[32m}[m
[32m+[m		[32mif (state == STATE_CLOSE) {[m
[32m+[m			[32mstate = STATE_OPEN;[m
[32m+[m			[32mswipe(mMenuView.getWidth() * mSwipeDirection);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic View getContentView() {[m
[32m+[m		[32mreturn mContentView;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic SwipeMenuView getMenuView() {[m
[32m+[m		[32mreturn mMenuView;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate int dp2px(int dp) {[m
[32m+[m		[32mreturn (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp,[m
[32m+[m				[32mgetContext().getResources().getDisplayMetrics());[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {[m
[32m+[m		[32msuper.onMeasure(widthMeasureSpec, heightMeasureSpec);[m
[32m+[m		[32mmMenuView.measure(MeasureSpec.makeMeasureSpec(0,[m
[32m+[m				[32mMeasureSpec.UNSPECIFIED), MeasureSpec.makeMeasureSpec([m
[32m+[m				[32mgetMeasuredHeight(), MeasureSpec.EXACTLY));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onLayout(boolean changed, int l, int t, int r, int b) {[m
[32m+[m		[32mmContentView.layout(0, 0, getMeasuredWidth(),[m
[32m+[m				[32mmContentView.getMeasuredHeight());[m
[32m+[m		[32mif (mSwipeDirection == SwipeMenuListView.DIRECTION_LEFT) {[m
[32m+[m			[32mmMenuView.layout(getMeasuredWidth(), 0,[m
[32m+[m					[32mgetMeasuredWidth() + mMenuView.getMeasuredWidth(),[m
[32m+[m					[32mmContentView.getMeasuredHeight());[m
[32m+[m		[32m} else {[m
[32m+[m			[32mmMenuView.layout(-mMenuView.getMeasuredWidth(), 0,[m
[32m+[m					[32m0, mContentView.getMeasuredHeight());[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setMenuHeight(int measuredHeight) {[m
[32m+[m		[32mLog.i("byz", "pos = " + position + ", height = " + measuredHeight);[m
[32m+[m		[32mLayoutParams params = (LayoutParams) mMenuView.getLayoutParams();[m
[32m+[m		[32mif (params.height != measuredHeight) {[m
[32m+[m			[32mparams.height = measuredHeight;[m
[32m+[m			[32mmMenuView.setLayoutParams(mMenuView.getLayoutParams());[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setSwipEnable(boolean swipEnable){[m
[32m+[m		[32mmSwipEnable = swipEnable;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic boolean getSwipEnable(){[m
[32m+[m		[32mreturn mSwipEnable;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuListView.java b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuListView.java[m
[1mnew file mode 100644[m
[1mindex 0000000..be87f91[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuListView.java[m
[36m@@ -0,0 +1,339 @@[m
[32m+[m[32mpackage com.example.superdemo.ui.swiper;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.util.AttributeSet;[m
[32m+[m[32mimport android.util.TypedValue;[m
[32m+[m[32mimport android.view.MotionEvent;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.animation.Interpolator;[m
[32m+[m[32mimport android.widget.ListAdapter;[m
[32m+[m[32mimport android.widget.ListView;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @author baoyz[m
[32m+[m[32m * @date 2014-8-18[m
[32m+[m[32m */[m
[32m+[m[32mpublic class SwipeMenuListView extends ListView {[m
[32m+[m
[32m+[m[32m    private static final int TOUCH_STATE_NONE = 0;[m
[32m+[m[32m    private static final int TOUCH_STATE_X = 1;[m
[32m+[m[32m    private static final int TOUCH_STATE_Y = 2;[m
[32m+[m
[32m+[m[32m    public static final int DIRECTION_LEFT = 1;[m
[32m+[m[32m    public static final int DIRECTION_RIGHT = -1;[m
[32m+[m[32m    private int mDirection = 1;//swipe from right to left by default[m
[32m+[m
[32m+[m[32m    private int MAX_Y = 5;[m
[32m+[m[32m    private int MAX_X = 3;[m
[32m+[m[32m    private float mDownX;[m
[32m+[m[32m    private float mDownY;[m
[32m+[m[32m    private int mTouchState;[m
[32m+[m[32m    private int mTouchPosition;[m
[32m+[m[32m    private SwipeMenuLayout mTouchView;[m
[32m+[m[32m    private OnSwipeListener mOnSwipeListener;[m
[32m+[m
[32m+[m[32m    private SwipeMenuCreator mMenuCreator;[m
[32m+[m[32m    private OnMenuItemClickListener mOnMenuItemClickListener;[m
[32m+[m[32m    private OnMenuStateChangeListener mOnMenuStateChangeListener;[m
[32m+[m[32m    private Interpolator mCloseInterpolator;[m
[32m+[m[32m    private Interpolator mOpenInterpolator;[m
[32m+[m
[32m+[m[32m    public SwipeMenuListView(Context context) {[m
[32m+[m[32m        super(context);[m
[32m+[m[32m        init();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public SwipeMenuListView(Context context, AttributeSet attrs, int defStyle) {[m
[32m+[m[32m        super(context, attrs, defStyle);[m
[32m+[m[32m        init();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public SwipeMenuListView(Context context, AttributeSet attrs) {[m
[32m+[m[32m        super(context, attrs);[m
[32m+[m[32m        init();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void init() {[m
[32m+[m[32m        MAX_X = dp2px(MAX_X);[m
[32m+[m[32m        MAX_Y = dp2px(MAX_Y);[m
[32m+[m[32m        mTouchState = TOUCH_STATE_NONE;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void setAdapter(ListAdapter adapter) {[m
[32m+[m[32m        super.setAdapter(new SwipeMenuAdapter(getContext(), adapter) {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void createMenu(SwipeMenu menu) {[m
[32m+[m[32m                if (mMenuCreator != null) {[m
[32m+[m[32m                    mMenuCreator.create(menu);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onItemClick(SwipeMenuView view, SwipeMenu menu,[m
[32m+[m[32m                                    int index) {[m
[32m+[m[32m                boolean flag = false;[m
[32m+[m[32m                if (mOnMenuItemClickListener != null) {[m
[32m+[m[32m                    flag = mOnMenuItemClickListener.onMenuItemClick([m
[32m+[m[32m                            view.getPosition(), menu, index);[m
[32m+[m[32m                }[m
[32m+[m[32m                if (mTouchView != null && !flag) {[m
[32m+[m[32m                    mTouchView.smoothCloseMenu();[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setCloseInterpolator(Interpolator interpolator) {[m
[32m+[m[32m        mCloseInterpolator = interpolator;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setOpenInterpolator(Interpolator interpolator) {[m
[32m+[m[32m        mOpenInterpolator = interpolator;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Interpolator getOpenInterpolator() {[m
[32m+[m[32m        return mOpenInterpolator;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Interpolator getCloseInterpolator() {[m
[32m+[m[32m        return mCloseInterpolator;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onInterceptTouchEvent(MotionEvent ev) {[m
[32m+[m[32m        //在拦截处处理，在滑动设置了点击事件的地方也能swip，点击时又不能影响原来的点击事件[m
[32m+[m[32m        int action = ev.getAction();[m
[32m+[m[32m        switch (action) {[m
[32m+[m[32m            case MotionEvent.ACTION_DOWN:[m
[32m+[m[32m                mDownX = ev.getX();[m
[32m+[m[32m                mDownY = ev.getY();[m
[32m+[m[32m                boolean handled = super.onInterceptTouchEvent(ev);[m
[32m+[m[32m                mTouchState = TOUCH_STATE_NONE;[m
[32m+[m[32m                mTouchPosition = pointToPosition((int) ev.getX(), (int) ev.getY());[m
[32m+[m[32m                View view = getChildAt(mTouchPosition - getFirstVisiblePosition());[m
[32m+[m
[32m+[m[32m                //只在空的时候赋值 以免每次触摸都赋值，会有多个open状态[m
[32m+[m[32m                if (view instanceof SwipeMenuLayout) {[m
[32m+[m[32m                    //如果有打开了 就拦截.[m
[32m+[m[32m                    if (mTouchView != null && mTouchView.isOpen() && !inRangeOfView(mTouchView.getMenuView(), ev)) {[m
[32m+[m[32m                        return true;[m
[32m+[m[32m                    }[m
[32m+[m[32m                    mTouchView = (SwipeMenuLayout) view;[m
[32m+[m[32m                    mTouchView.setSwipeDirection(mDirection);[m
[32m+[m[32m                }[m
[32m+[m[32m                //如果摸在另外个view[m
[32m+[m[32m                if (mTouchView != null && mTouchView.isOpen() && view != mTouchView) {[m
[32m+[m[32m                    handled = true;[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                if (mTouchView != null) {[m
[32m+[m[32m                    mTouchView.onSwipe(ev);[m
[32m+[m[32m                }[m
[32m+[m[32m                return handled;[m
[32m+[m[32m            case MotionEvent.ACTION_MOVE:[m
[32m+[m[32m                float dy = Math.abs((ev.getY() - mDownY));[m
[32m+[m[32m                float dx = Math.abs((ev.getX() - mDownX));[m
[32m+[m[32m                if (Math.abs(dy) > MAX_Y || Math.abs(dx) > MAX_X) {[m
[32m+[m[32m                    //每次拦截的down都把触摸状态设置成了TOUCH_STATE_NONE 只有返回true才会走onTouchEvent 所以写在这里就够了[m
[32m+[m[32m                    if (mTouchState == TOUCH_STATE_NONE) {[m
[32m+[m[32m                        if (Math.abs(dy) > MAX_Y) {[m
[32m+[m[32m                            mTouchState = TOUCH_STATE_Y;[m
[32m+[m[32m                        } else if (dx > MAX_X) {[m
[32m+[m[32m                            mTouchState = TOUCH_STATE_X;[m
[32m+[m[32m                            if (mOnSwipeListener != null) {[m
[32m+[m[32m                                mOnSwipeListener.onSwipeStart(mTouchPosition);[m
[32m+[m[32m                            }[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                }[m
[32m+[m[32m        }[m
[32m+[m[32m        return super.onInterceptTouchEvent(ev);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onTouchEvent(MotionEvent ev) {[m
[32m+[m[32m        if (ev.getAction() != MotionEvent.ACTION_DOWN && mTouchView == null)[m
[32m+[m[32m            return super.onTouchEvent(ev);[m
[32m+[m[32m        int action = ev.getAction();[m
[32m+[m[32m        switch (action) {[m
[32m+[m[32m            case MotionEvent.ACTION_DOWN:[m
[32m+[m[32m                int oldPos = mTouchPosition;[m
[32m+[m[32m                mDownX = ev.getX();[m
[32m+[m[32m                mDownY = ev.getY();[m
[32m+[m[32m                mTouchState = TOUCH_STATE_NONE;[m
[32m+[m
[32m+[m[32m                mTouchPosition = pointToPosition((int) ev.getX(), (int) ev.getY());[m
[32m+[m
[32m+[m[32m                if (mTouchPosition == oldPos && mTouchView != null[m
[32m+[m[32m                        && mTouchView.isOpen()) {[m
[32m+[m[32m                    mTouchState = TOUCH_STATE_X;[m
[32m+[m[32m                    mTouchView.onSwipe(ev);[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                View view = getChildAt(mTouchPosition - getFirstVisiblePosition());[m
[32m+[m
[32m+[m[32m                if (mTouchView != null && mTouchView.isOpen()) {[m
[32m+[m[32m                    mTouchView.smoothCloseMenu();[m
[32m+[m[32m                    mTouchView = null;[m
[32m+[m[32m                    // return super.onTouchEvent(ev);[m
[32m+[m[32m                    // try to cancel the touch event[m
[32m+[m[32m                    MotionEvent cancelEvent = MotionEvent.obtain(ev);[m
[32m+[m[32m                    cancelEvent.setAction(MotionEvent.ACTION_CANCEL);[m
[32m+[m[32m                    onTouchEvent(cancelEvent);[m
[32m+[m[32m                    if (mOnMenuStateChangeListener != null) {[m
[32m+[m[32m                        mOnMenuStateChangeListener.onMenuClose(oldPos);[m
[32m+[m[32m                    }[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                }[m
[32m+[m[32m                if (view instanceof SwipeMenuLayout) {[m
[32m+[m[32m                    mTouchView = (SwipeMenuLayout) view;[m
[32m+[m[32m                    mTouchView.setSwipeDirection(mDirection);[m
[32m+[m[32m                }[m
[32m+[m[32m                if (mTouchView != null) {[m
[32m+[m[32m                    mTouchView.onSwipe(ev);[m
[32m+[m[32m                }[m
[32m+[m[32m                break;[m
[32m+[m[32m            case MotionEvent.ACTION_MOVE:[m
[32m+[m[32m                //有些可能有header,要减去header再判断[m
[32m+[m[32m                mTouchPosition = pointToPosition((int) ev.getX(), (int) ev.getY()) - getHeaderViewsCount();[m
[32m+[m[32m                //如果滑动了一下没完全展现，就收回去，这时候mTouchView已经赋值，再滑动另外一个不可以swip的view[m
[32m+[m[32m                //会导致mTouchView swip 。 所以要用位置判断是否滑动的是一个view[m
[32m+[m[32m                if (!mTouchView.getSwipEnable() || mTouchPosition != mTouchView.getPosition()) {[m
[32m+[m[32m                    break;[m
[32m+[m[32m                }[m
[32m+[m[32m                float dy = Math.abs((ev.getY() - mDownY));[m
[32m+[m[32m                float dx = Math.abs((ev.getX() - mDownX));[m
[32m+[m[32m                if (mTouchState == TOUCH_STATE_X) {[m
[32m+[m[32m                    if (mTouchView != null) {[m
[32m+[m[32m                        mTouchView.onSwipe(ev);[m
[32m+[m[32m                    }[m
[32m+[m[32m                    getSelector().setState(new int[]{0});[m
[32m+[m[32m                    ev.setAction(MotionEvent.ACTION_CANCEL);[m
[32m+[m[32m                    super.onTouchEvent(ev);[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                } else if (mTouchState == TOUCH_STATE_NONE) {[m
[32m+[m[32m                    if (Math.abs(dy) > MAX_Y) {[m
[32m+[m[32m                        mTouchState = TOUCH_STATE_Y;[m
[32m+[m[32m                    } else if (dx > MAX_X) {[m
[32m+[m[32m                        mTouchState = TOUCH_STATE_X;[m
[32m+[m[32m                        if (mOnSwipeListener != null) {[m
[32m+[m[32m                            mOnSwipeListener.onSwipeStart(mTouchPosition);[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m                break;[m
[32m+[m[32m            case MotionEvent.ACTION_UP:[m
[32m+[m[32m                if (mTouchState == TOUCH_STATE_X) {[m
[32m+[m[32m                    if (mTouchView != null) {[m
[32m+[m[32m                        boolean isBeforeOpen = mTouchView.isOpen();[m
[32m+[m[32m                        mTouchView.onSwipe(ev);[m
[32m+[m[32m                        boolean isAfterOpen = mTouchView.isOpen();[m
[32m+[m[32m                        if (isBeforeOpen != isAfterOpen && mOnMenuStateChangeListener != null) {[m
[32m+[m[32m                            if (isAfterOpen) {[m
[32m+[m[32m                                mOnMenuStateChangeListener.onMenuOpen(mTouchPosition);[m
[32m+[m[32m                            } else {[m
[32m+[m[32m                                mOnMenuStateChangeListener.onMenuClose(mTouchPosition);[m
[32m+[m[32m                            }[m
[32m+[m[32m                        }[m
[32m+[m[32m                        if (!isAfterOpen) {[m
[32m+[m[32m                            mTouchPosition = -1;[m
[32m+[m[32m                            mTouchView = null;[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m                    if (mOnSwipeListener != null) {[m
[32m+[m[32m                        mOnSwipeListener.onSwipeEnd(mTouchPosition);[m
[32m+[m[32m                    }[m
[32m+[m[32m                    ev.setAction(MotionEvent.ACTION_CANCEL);[m
[32m+[m[32m                    super.onTouchEvent(ev);[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                }[m
[32m+[m[32m                break;[m
[32m+[m[32m        }[m
[32m+[m[32m        return super.onTouchEvent(ev);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void smoothOpenMenu(int position) {[m
[32m+[m[32m        if (position >= getFirstVisiblePosition()[m
[32m+[m[32m                && position <= getLastVisiblePosition()) {[m
[32m+[m[32m            View view = getChildAt(position - getFirstVisiblePosition());[m
[32m+[m[32m            if (view instanceof SwipeMenuLayout) {[m
[32m+[m[32m                mTouchPosition = position;[m
[32m+[m[32m                if (mTouchView != null && mTouchView.isOpen()) {[m
[32m+[m[32m                    mTouchView.smoothCloseMenu();[m
[32m+[m[32m                }[m
[32m+[m[32m                mTouchView = (SwipeMenuLayout) view;[m
[32m+[m[32m                mTouchView.setSwipeDirection(mDirection);[m
[32m+[m[32m                mTouchView.smoothOpenMenu();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void smoothCloseMenu(){[m
[32m+[m[32m        if (mTouchView != null && mTouchView.isOpen()) {[m
[32m+[m[32m            mTouchView.smoothCloseMenu();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private int dp2px(int dp) {[m
[32m+[m[32m        return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp,[m
[32m+[m[32m                getContext().getResources().getDisplayMetrics());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setMenuCreator(SwipeMenuCreator menuCreator) {[m
[32m+[m[32m        this.mMenuCreator = menuCreator;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setOnMenuItemClickListener([m
[32m+[m[32m            OnMenuItemClickListener onMenuItemClickListener) {[m
[32m+[m[32m        this.mOnMenuItemClickListener = onMenuItemClickListener;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setOnSwipeListener(OnSwipeListener onSwipeListener) {[m
[32m+[m[32m        this.mOnSwipeListener = onSwipeListener;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setOnMenuStateChangeListener(OnMenuStateChangeListener onMenuStateChangeListener) {[m
[32m+[m[32m        mOnMenuStateChangeListener = onMenuStateChangeListener;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static interface OnMenuItemClickListener {[m
[32m+[m[32m        boolean onMenuItemClick(int position, SwipeMenu menu, int index);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static interface OnSwipeListener {[m
[32m+[m[32m        void onSwipeStart(int position);[m
[32m+[m
[32m+[m[32m        void onSwipeEnd(int position);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static interface OnMenuStateChangeListener {[m
[32m+[m[32m        void onMenuOpen(int position);[m
[32m+[m
[32m+[m[32m        void onMenuClose(int position);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setSwipeDirection(int direction) {[m
[32m+[m[32m        mDirection = direction;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * 判断点击事件是否在某个view内[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param view[m
[32m+[m[32m     * @param ev[m
[32m+[m[32m     * @return[m
[32m+[m[32m     */[m
[32m+[m[32m    public static boolean inRangeOfView(View view, MotionEvent ev) {[m
[32m+[m[32m        int[] location = new int[2];[m
[32m+[m[32m        view.getLocationOnScreen(location);[m
[32m+[m[32m        int x = location[0];[m
[32m+[m[32m        int y = location[1];[m
[32m+[m[32m        if (ev.getRawX() < x || ev.getRawX() > (x + view.getWidth()) || ev.getRawY() < y || ev.getRawY() > (y + view.getHeight())) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuView.java b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuView.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1347981[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/ui/swiper/SwipeMenuView.java[m
[36m@@ -0,0 +1,100 @@[m
[32m+[m[32mpackage com.example.superdemo.ui.swiper;[m
[32m+[m
[32m+[m[32mimport android.text.TextUtils;[m
[32m+[m[32mimport android.view.Gravity;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.widget.ImageView;[m
[32m+[m[32mimport android.widget.LinearLayout;[m
[32m+[m[32mimport android.widget.ListView;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Administrator on 2016/6/20.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class SwipeMenuView extends LinearLayout implements View.OnClickListener {[m
[32m+[m
[32m+[m[32m    private ListView mListView;[m
[32m+[m[32m    private SwipeMenuLayout mLayout;[m
[32m+[m[32m    private SwipeMenu mMenu;[m
[32m+[m[32m    private OnSwipeItemClickListener onItemClickListener;[m
[32m+[m[32m    private int position;[m
[32m+[m
[32m+[m[32m    public int getPosition() {[m
[32m+[m[32m        return position;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setPosition(int position) {[m
[32m+[m[32m        this.position = position;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public SwipeMenuView(SwipeMenu menu, ListView listView) {[m
[32m+[m[32m        super(menu.getContext());[m
[32m+[m[32m        mListView = listView;[m
[32m+[m[32m        mMenu = menu;[m
[32m+[m[32m        List<SwipeMenuItem> items = menu.getMenuItems();[m
[32m+[m[32m        int id = 0;[m
[32m+[m[32m        for (SwipeMenuItem item : items) {[m
[32m+[m[32m            addItem(item, id++);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void addItem(SwipeMenuItem item, int id) {[m
[32m+[m[32m        LayoutParams params = new LayoutParams(item.getWidth(), LayoutParams.MATCH_PARENT);[m
[32m+[m[32m        LinearLayout parent = new LinearLayout(getContext());[m
[32m+[m[32m        parent.setId(id);[m
[32m+[m[32m        parent.setGravity(Gravity.CENTER);[m
[32m+[m[32m        parent.setOrientation(LinearLayout.VERTICAL);[m
[32m+[m[32m        parent.setLayoutParams(params);[m
[32m+[m[32m        parent.setBackgroundDrawable(item.getBackground());[m
[32m+[m[32m        parent.setOnClickListener(this);[m
[32m+[m[32m        addView(parent);[m
[32m+[m
[32m+[m[32m        if (item.getIcon() != null) {[m
[32m+[m[32m            parent.addView(createIcon(item));[m
[32m+[m[32m        }[m
[32m+[m[32m        if (!TextUtils.isEmpty(item.getTitle())) {[m
[32m+[m[32m            parent.addView(createTitle(item));[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private ImageView createIcon(SwipeMenuItem item) {[m
[32m+[m[32m        ImageView iv = new ImageView(getContext());[m
[32m+[m[32m        iv.setImageDrawable(item.getIcon());[m
[32m+[m[32m        return iv;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private TextView createTitle(SwipeMenuItem item) {[m
[32m+[m[32m        TextView tv = new TextView(getContext());[m
[32m+[m[32m        tv.setText(item.getTitle());[m
[32m+[m[32m        tv.setGravity(Gravity.CENTER);[m
[32m+[m[32m        tv.setTextSize(item.getTitleSize());[m
[32m+[m[32m        tv.setTextColor(item.getTitleColor());[m
[32m+[m[32m        return tv;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onClick(View v) {[m
[32m+[m[32m        if (onItemClickListener != null && mLayout.isOpen()) {[m
[32m+[m[32m            onItemClickListener.onItemClick(this, mMenu, v.getId());[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public OnSwipeItemClickListener getOnSwipeItemClickListener() {[m
[32m+[m[32m        return onItemClickListener;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setOnSwipeItemClickListener(OnSwipeItemClickListener onItemClickListener) {[m
[32m+[m[32m        this.onItemClickListener = onItemClickListener;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setLayout(SwipeMenuLayout mLayout) {[m
[32m+[m[32m        this.mLayout = mLayout;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static interface OnSwipeItemClickListener {[m
[32m+[m[32m        void onItemClick(SwipeMenuView view, SwipeMenu menu, int index);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/utils/CommonUtils.java b/app/src/main/java/com/example/superdemo/utils/CommonUtils.java[m
[1mindex 4f47ca4..adceb9b 100644[m
[1m--- a/app/src/main/java/com/example/superdemo/utils/CommonUtils.java[m
[1m+++ b/app/src/main/java/com/example/superdemo/utils/CommonUtils.java[m
[36m@@ -1,6 +1,11 @@[m
 package com.example.superdemo.utils;[m
 [m
[32m+[m[32mimport android.annotation.TargetApi;[m
[32m+[m[32mimport android.app.Activity;[m
 import android.content.Context;[m
[32m+[m[32mimport android.os.Build;[m
[32m+[m[32mimport android.view.Window;[m
[32m+[m[32mimport android.view.WindowManager;[m
 import android.widget.ImageView;[m
 [m
 import com.bumptech.glide.Glide;[m
[36m@@ -13,9 +18,39 @@[m [mpublic class CommonUtils {[m
     /**[m
      * Glide 加载图片[m
      */[m
[31m-    public static void loadGlideImage(Context context, String imagUrl, ImageView imageView){[m
[32m+[m[32m    public static void loadGlideImage(Context context, String imagUrl, ImageView imageView) {[m
         Glide.with(context)[m
                 .load(imagUrl)[m
                 .into(imageView);[m
     }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * 修改状态栏颜色[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param activity activity[m
[32m+[m[32m     * @param color   color[m
[32m+[m[32m     */[m
[32m+[m[32m    public static void changeSystemBar(Activity activity, int color, float alpha) {[m
[32m+[m[32m        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {[m
[32m+[m[32m            setTranslucentStatus(activity, true);[m
[32m+[m[32m        }[m
[32m+[m[32m        SystemBarTintManager tintManager = new SystemBarTintManager(activity);[m
[32m+[m[32m        tintManager.setStatusBarTintEnabled(true);[m
[32m+[m[32m        tintManager.setStatusBarAlpha(alpha);[m
[32m+[m[32m        tintManager.setStatusBarTintResource(color);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @TargetApi(19)[m
[32m+[m[32m    public static void setTranslucentStatus(Activity activity, boolean on) {[m
[32m+[m[32m        Window win = activity.getWindow();[m
[32m+[m[32m        WindowManager.LayoutParams winParams = win.getAttributes();[m
[32m+[m[32m        final int bits = WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS;[m
[32m+[m[32m        if (on) {[m
[32m+[m[32m            winParams.flags |= bits;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            winParams.flags &= ~bits;[m
[32m+[m[32m        }[m
[32m+[m[32m        win.setAttributes(winParams);[m
[32m+[m[32m    }[m
[32m+[m
 }[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/utils/SystemBarTintManager.java b/app/src/main/java/com/example/superdemo/utils/SystemBarTintManager.java[m
[1mnew file mode 100644[m
[1mindex 0000000..bd4129c[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/superdemo/utils/SystemBarTintManager.java[m
[36m@@ -0,0 +1,547 @@[m
[32m+[m
[32m+[m
[32m+[m[32mpackage com.example.superdemo.utils;[m
[32m+[m
[32m+[m[32mimport android.annotation.SuppressLint;[m
[32m+[m[32mimport android.annotation.TargetApi;[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.res.Configuration;[m
[32m+[m[32mimport android.content.res.Resources;[m
[32m+[m[32mimport android.content.res.TypedArray;[m
[32m+[m[32mimport android.graphics.drawable.Drawable;[m
[32m+[m[32mimport android.os.Build;[m
[32m+[m[32mimport android.util.DisplayMetrics;[m
[32m+[m[32mimport android.util.TypedValue;[m
[32m+[m[32mimport android.view.Gravity;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.ViewConfiguration;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.view.Window;[m
[32m+[m[32mimport android.view.WindowManager;[m
[32m+[m[32mimport android.widget.FrameLayout.LayoutParams;[m
[32m+[m
[32m+[m[32mimport java.lang.reflect.Method;[m
[32m+[m
[32m+[m
[32m+[m[32mpublic class SystemBarTintManager {[m
[32m+[m
[32m+[m[32m    static {[m
[32m+[m[32m        // Android allows a system property to override the presence of the navigation bar.[m
[32m+[m[32m        // Used by the emulator.[m
[32m+[m[32m        // See https://github.com/android/platform_frameworks_base/blob/master/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java#L1076[m
[32m+[m[32m        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {[m
[32m+[m[32m            try {[m
[32m+[m[32m                Class c = Class.forName("android.os.SystemProperties");[m
[32m+[m[32m                Method m = c.getDeclaredMethod("get", String.class);[m
[32m+[m[32m                m.setAccessible(true);[m
[32m+[m[32m                sNavBarOverride = (String) m.invoke(null, "qemu.hw.mainkeys");[m
[32m+[m[32m            } catch (Throwable e) {[m
[32m+[m[32m                sNavBarOverride = null;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The default system bar tint color value.[m
[32m+[m[32m     */[m
[32m+[m[32m    public static final int DEFAULT_TINT_COLOR = 0x99000000;[m
[32m+[m
[32m+[m[32m    private static String sNavBarOverride;[m
[32m+[m
[32m+[m[32m    private final SystemBarConfig mConfig;[m
[32m+[m[32m    private boolean mStatusBarAvailable;[m
[32m+[m[32m    private boolean mNavBarAvailable;[m
[32m+[m[32m    private boolean mStatusBarTintEnabled;[m
[32m+[m[32m    private boolean mNavBarTintEnabled;[m
[32m+[m[32m    private View mStatusBarTintView;[m
[32m+[m[32m    private View mNavBarTintView;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Constructor. Call this in the host activity onCreate method after its[m
[32m+[m[32m     * content view has been set. You should always create new instances when[m
[32m+[m[32m     * the host activity is recreated.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param activity The host activity.[m
[32m+[m[32m     */[m
[32m+[m[32m    @TargetApi(19)[m
[32m+[m[32m    public SystemBarTintManager(Activity activity) {[m
[32m+[m
[32m+[m[32m        Window win = activity.getWindow();[m
[32m+[m[32m        ViewGroup decorViewGroup = (ViewGroup) win.getDecorView();[m
[32m+[m
[32m+[m[32m        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {[m
[32m+[m[32m            // check theme attrs[m
[32m+[m[32m            int[] attrs = {android.R.attr.windowTranslucentStatus,[m
[32m+[m[32m                    android.R.attr.windowTranslucentNavigation};[m
[32m+[m[32m            TypedArray a = activity.obtainStyledAttributes(attrs);[m
[32m+[m[32m            try {[m
[32m+[m[32m                mStatusBarAvailable = a.getBoolean(0, false);[m
[32m+[m[32m                mNavBarAvailable = a.getBoolean(1, false);[m
[32m+[m[32m            } finally {[m
[32m+[m[32m                a.recycle();[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            // check window flags[m
[32m+[m[32m            WindowManager.LayoutParams winParams = win.getAttributes();[m
[32m+[m[32m            int bits = WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS;[m
[32m+[m[32m            if ((winParams.flags & bits) != 0) {[m
[32m+[m[32m                mStatusBarAvailable = true;[m
[32m+[m[32m            }[m
[32m+[m[32m            bits = WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION;[m
[32m+[m[32m            if ((winParams.flags & bits) != 0) {[m
[32m+[m[32m                mNavBarAvailable = true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        mConfig = new SystemBarConfig(activity, mStatusBarAvailable, mNavBarAvailable);[m
[32m+[m[32m        // device might not have virtual navigation keys[m
[32m+[m[32m        if (!mConfig.hasNavigtionBar()) {[m
[32m+[m[32m            mNavBarAvailable = false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (mStatusBarAvailable) {[m
[32m+[m[32m            setupStatusBarView(activity, decorViewGroup);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (mNavBarAvailable) {[m
[32m+[m[32m            setupNavBarView(activity, decorViewGroup);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Enable tinting of the system status bar.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the platform is running Jelly Bean or earlier, or translucent system[m
[32m+[m[32m     * UI modes have not been enabled in either the theme or via window flags,[m
[32m+[m[32m     * then this method does nothing.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param enabled True to enable tinting, false to disable it (default).[m
[32m+[m[32m     */[m
[32m+[m[32m    public void setStatusBarTintEnabled(boolean enabled) {[m
[32m+[m[32m        mStatusBarTintEnabled = enabled;[m
[32m+[m[32m        if (mStatusBarAvailable) {[m
[32m+[m[32m            mStatusBarTintView.setVisibility(enabled ? View.VISIBLE : View.GONE);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Enable tinting of the system navigation bar.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the platform does not have soft navigation keys, is running Jelly Bean[m
[32m+[m[32m     * or earlier, or translucent system UI modes have not been enabled in either[m
[32m+[m[32m     * the theme or via window flags, then this method does nothing.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param enabled True to enable tinting, false to disable it (default).[m
[32m+[m[32m     */[m
[32m+[m[32m    public void setNavigationBarTintEnabled(boolean enabled) {[m
[32m+[m[32m        mNavBarTintEnabled = enabled;[m
[32m+[m[32m        if (mNavBarAvailable) {[m
[32m+[m[32m            mNavBarTintView.setVisibility(enabled ? View.VISIBLE : View.GONE);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified color tint to all system UI bars.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param color The color of the background tint.[m
[32m+[m[32m     */[m
[32m+[m[32m    public void setTintColor(int color) {[m
[32m+[m[32m        setStatusBarTintColor(color);[m
[32m+[m[32m        setNavigationBarTintColor(color);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified drawable or color resource to all system UI bars.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param res The identifier of the resource.[m
[32m+[m[32m     */[m
[32m+[m[32m    public void setTintResource(int res) {[m
[32m+[m[32m        setStatusBarTintResource(res);[m
[32m+[m[32m        setNavigationBarTintResource(res);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified drawable to all system UI bars.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param drawable The drawable to use as the background, or null to remove it.[m
[32m+[m[32m     */[m
[32m+[m[32m    public void setTintDrawable(Drawable drawable) {[m
[32m+[m[32m        setStatusBarTintDrawable(drawable);[m
[32m+[m[32m        setNavigationBarTintDrawable(drawable);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified alpha to all system UI bars.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param alpha The alpha to use[m
[32m+[m[32m     */[m
[32m+[m[32m    public void setTintAlpha(float alpha) {[m
[32m+[m[32m        setStatusBarAlpha(alpha);[m
[32m+[m[32m        setNavigationBarAlpha(alpha);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified color tint to the system status bar.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param color The color of the background tint.[m
[32m+[m[32m     */[m
[32m+[m[32m    public void setStatusBarTintColor(int color) {[m
[32m+[m[32m        if (mStatusBarAvailable) {[m
[32m+[m[32m            mStatusBarTintView.setBackgroundColor(color);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified drawable or color resource to the system status bar.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param res The identifier of the resource.[m
[32m+[m[32m     */[m
[32m+[m[32m    public void setStatusBarTintResource(int res) {[m
[32m+[m[32m        if (mStatusBarAvailable) {[m
[32m+[m[32m            mStatusBarTintView.setBackgroundResource(res);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified drawable to the system status bar.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param drawable The drawable to use as the background, or null to remove it.[m
[32m+[m[32m     */[m
[32m+[m[32m    @SuppressWarnings("deprecation")[m
[32m+[m[32m    public void setStatusBarTintDrawable(Drawable drawable) {[m
[32m+[m[32m        if (mStatusBarAvailable) {[m
[32m+[m[32m            mStatusBarTintView.setBackgroundDrawable(drawable);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified alpha to the system status bar.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param alpha The alpha to use[m
[32m+[m[32m     */[m
[32m+[m[32m    @TargetApi(11)[m
[32m+[m[32m    public void setStatusBarAlpha(float alpha) {[m
[32m+[m[32m        if (mStatusBarAvailable && Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {[m
[32m+[m[32m            mStatusBarTintView.setAlpha(alpha);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified color tint to the system navigation bar.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param color The color of the background tint.[m
[32m+[m[32m     */[m
[32m+[m[32m    public void setNavigationBarTintColor(int color) {[m
[32m+[m[32m        if (mNavBarAvailable) {[m
[32m+[m[32m            mNavBarTintView.setBackgroundColor(color);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified drawable or color resource to the system navigation bar.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param res The identifier of the resource.[m
[32m+[m[32m     */[m
[32m+[m[32m    public void setNavigationBarTintResource(int res) {[m
[32m+[m[32m        if (mNavBarAvailable) {[m
[32m+[m[32m            mNavBarTintView.setBackgroundResource(res);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified drawable to the system navigation bar.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param drawable The drawable to use as the background, or null to remove it.[m
[32m+[m[32m     */[m
[32m+[m[32m    @SuppressWarnings("deprecation")[m
[32m+[m[32m    public void setNavigationBarTintDrawable(Drawable drawable) {[m
[32m+[m[32m        if (mNavBarAvailable) {[m
[32m+[m[32m            mNavBarTintView.setBackgroundDrawable(drawable);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Apply the specified alpha to the system navigation bar.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param alpha The alpha to use[m
[32m+[m[32m     */[m
[32m+[m[32m    @TargetApi(11)[m
[32m+[m[32m    public void setNavigationBarAlpha(float alpha) {[m
[32m+[m[32m        if (mNavBarAvailable && Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {[m
[32m+[m[32m            mNavBarTintView.setAlpha(alpha);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get the system bar configuration.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return The system bar configuration for the current device configuration.[m
[32m+[m[32m     */[m
[32m+[m[32m    public SystemBarConfig getConfig() {[m
[32m+[m[32m        return mConfig;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Is tinting enabled for the system status bar?[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return True if enabled, False otherwise.[m
[32m+[m[32m     */[m
[32m+[m[32m    public boolean isStatusBarTintEnabled() {[m
[32m+[m[32m        return mStatusBarTintEnabled;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Is tinting enabled for the system navigation bar?[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return True if enabled, False otherwise.[m
[32m+[m[32m     */[m
[32m+[m[32m    public boolean isNavBarTintEnabled() {[m
[32m+[m[32m        return mNavBarTintEnabled;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void setupStatusBarView(Context context, ViewGroup decorViewGroup) {[m
[32m+[m[32m        mStatusBarTintView = new View(context);[m
[32m+[m[32m        LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, mConfig.getStatusBarHeight());[m
[32m+[m[32m        params.gravity = Gravity.TOP;[m
[32m+[m[32m        if (mNavBarAvailable && !mConfig.isNavigationAtBottom()) {[m
[32m+[m[32m            params.rightMargin = mConfig.getNavigationBarWidth();[m
[32m+[m[32m        }[m
[32m+[m[32m        mStatusBarTintView.setLayoutParams(params);[m
[32m+[m[32m        mStatusBarTintView.setBackgroundColor(DEFAULT_TINT_COLOR);[m
[32m+[m[32m        mStatusBarTintView.setVisibility(View.GONE);[m
[32m+[m[32m        decorViewGroup.addView(mStatusBarTintView);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void setupNavBarView(Context context, ViewGroup decorViewGroup) {[m
[32m+[m[32m        mNavBarTintView = new View(context);[m
[32m+[m[32m        LayoutParams params;[m
[32m+[m[32m        if (mConfig.isNavigationAtBottom()) {[m
[32m+[m[32m            params = new LayoutParams(LayoutParams.MATCH_PARENT, mConfig.getNavigationBarHeight());[m
[32m+[m[32m            params.gravity = Gravity.BOTTOM;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            params = new LayoutParams(mConfig.getNavigationBarWidth(), LayoutParams.MATCH_PARENT);[m
[32m+[m[32m            params.gravity = Gravity.RIGHT;[m
[32m+[m[32m        }[m
[32m+[m[32m        mNavBarTintView.setLayoutParams(params);[m
[32m+[m[32m        mNavBarTintView.setBackgroundColor(DEFAULT_TINT_COLOR);[m
[32m+[m[32m        mNavBarTintView.setVisibility(View.GONE);[m
[32m+[m[32m        decorViewGroup.addView(mNavBarTintView);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Class which describes system bar sizing and other characteristics for the current[m
[32m+[m[32m     * device configuration.[m
[32m+[m[32m     *[m
[32m+[m[32m     */[m
[32m+[m[32m    public static class SystemBarConfig {[m
[32m+[m
[32m+[m[32m        private static final String STATUS_BAR_HEIGHT_RES_NAME = "status_bar_height";[m
[32m+[m[32m        private static final String NAV_BAR_HEIGHT_RES_NAME = "navigation_bar_height";[m
[32m+[m[32m        private static final String NAV_BAR_HEIGHT_LANDSCAPE_RES_NAME = "navigation_bar_height_landscape";[m
[32m+[m[32m        private static final String NAV_BAR_WIDTH_RES_NAME = "navigation_bar_width";[m
[32m+[m[32m        private static final String SHOW_NAV_BAR_RES_NAME = "config_showNavigationBar";[m
[32m+[m
[32m+[m[32m        private final boolean mTranslucentStatusBar;[m
[32m+[m[32m        private final boolean mTranslucentNavBar;[m
[32m+[m[32m        private final int mStatusBarHeight;[m
[32m+[m[32m        private final int mActionBarHeight;[m
[32m+[m[32m        private final boolean mHasNavigationBar;[m
[32m+[m[32m        private final int mNavigationBarHeight;[m
[32m+[m[32m        private final int mNavigationBarWidth;[m
[32m+[m[32m        private final boolean mInPortrait;[m
[32m+[m[32m        private final float mSmallestWidthDp;[m
[32m+[m
[32m+[m[32m        private SystemBarConfig(Activity activity, boolean translucentStatusBar, boolean traslucentNavBar) {[m
[32m+[m[32m            Resources res = activity.getResources();[m
[32m+[m[32m            mInPortrait = (res.getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT);[m
[32m+[m[32m            mSmallestWidthDp = getSmallestWidthDp(activity);[m
[32m+[m[32m            mStatusBarHeight = getInternalDimensionSize(res, STATUS_BAR_HEIGHT_RES_NAME);[m
[32m+[m[32m            mActionBarHeight = getActionBarHeight(activity);[m
[32m+[m[32m            mNavigationBarHeight = getNavigationBarHeight(activity);[m
[32m+[m[32m            mNavigationBarWidth = getNavigationBarWidth(activity);[m
[32m+[m[32m            mHasNavigationBar = (mNavigationBarHeight > 0);[m
[32m+[m[32m            mTranslucentStatusBar = translucentStatusBar;[m
[32m+[m[32m            mTranslucentNavBar = traslucentNavBar;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @TargetApi(14)[m
[32m+[m[32m        private int getActionBarHeight(Context context) {[m
[32m+[m[32m            int result = 0;[m
[32m+[m[32m            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {[m
[32m+[m[32m                TypedValue tv = new TypedValue();[m
[32m+[m[32m                context.getTheme().resolveAttribute(android.R.attr.actionBarSize, tv, true);[m
[32m+[m[32m                result = TypedValue.complexToDimensionPixelSize(tv.data, context.getResources().getDisplayMetrics());[m
[32m+[m[32m            }[m
[32m+[m[32m            return result;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @TargetApi(14)[m
[32m+[m[32m        private int getNavigationBarHeight(Context context) {[m
[32m+[m[32m            Resources res = context.getResources();[m
[32m+[m[32m            int result = 0;[m
[32m+[m[32m            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {[m
[32m+[m[32m                if (hasNavBar(context)) {[m
[32m+[m[32m                    String key;[m
[32m+[m[32m                    if (mInPortrait) {[m
[32m+[m[32m                        key = NAV_BAR_HEIGHT_RES_NAME;[m
[32m+[m[32m                    } else {[m
[32m+[m[32m                        key = NAV_BAR_HEIGHT_LANDSCAPE_RES_NAME;[m
[32m+[m[32m                    }[m
[32m+[m[32m                    return getInternalDimensionSize(res, key);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            return result;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @TargetApi(14)[m
[32m+[m[32m        private int getNavigationBarWidth(Context context) {[m
[32m+[m[32m            Resources res = context.getResources();[m
[32m+[m[32m            int result = 0;[m
[32m+[m[32m            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {[m
[32m+[m[32m                if (hasNavBar(context)) {[m
[32m+[m[32m                    return getInternalDimensionSize(res, NAV_BAR_WIDTH_RES_NAME);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            return result;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @TargetApi(14)[m
[32m+[m[32m        private boolean hasNavBar(Context context) {[m
[32m+[m[32m            Resources res = context.getResources();[m
[32m+[m[32m            int resourceId = res.getIdentifier(SHOW_NAV_BAR_RES_NAME, "bool", "android");[m
[32m+[m[32m            if (resourceId != 0) {[m
[32m+[m[32m                boolean hasNav = res.getBoolean(resourceId);[m
[32m+[m[32m                // check override flag (see static block)[m
[32m+[m[32m                if ("1".equals(sNavBarOverride)) {[m
[32m+[m[32m                    hasNav = false;[m
[32m+[m[32m                } else if ("0".equals(sNavBarOverride)) {[m
[32m+[m[32m                    hasNav = true;[m
[32m+[m[32m                }[m
[32m+[m[32m                return hasNav;[m
[32m+[m[32m            } else { // fallback[m
[32m+[m[32m                return !ViewConfiguration.get(context).hasPermanentMenuKey();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        private int getInternalDimensionSize(Resources res, String key) {[m
[32m+[m[32m            int result = 0;[m
[32m+[m[32m            int resourceId = res.getIdentifier(key, "dimen", "android");[m
[32m+[m[32m            if (resourceId > 0) {[m
[32m+[m[32m                result = res.getDimensionPixelSize(resourceId);[m
[32m+[m[32m            }[m
[32m+[m[32m            return result;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @SuppressLint("NewApi")[m
[32m+[m[32m        private float getSmallestWidthDp(Activity activity) {[m
[32m+[m[32m            DisplayMetrics metrics = new DisplayMetrics();[m
[32m+[m[32m            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {[m
[32m+[m[32m                activity.getWindowManager().getDefaultDisplay().getRealMetrics(metrics);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                // TODO this is not correct, but we don't really care pre-kitkat[m
[32m+[m[32m                activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);[m
[32m+[m[32m            }[m
[32m+[m[32m            float widthDp = metrics.widthPixels / metrics.density;[m
[32m+[m[32m            float heightDp = metrics.heightPixels / metrics.density;[m
[32m+[m[32m            return Math.min(widthDp, heightDp);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Should a navigation bar appear at the bottom of the screen in the current[m
[32m+[m[32m         * device configuration? A navigation bar may appear on the right side of[m
[32m+[m[32m         * the screen in certain configurations.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @return True if navigation should appear at the bottom of the screen, False otherwise.[m
[32m+[m[32m         */[m
[32m+[m[32m        public boolean isNavigationAtBottom() {[m
[32m+[m[32m            return (mSmallestWidthDp >= 600 || mInPortrait);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Get the height of the system status bar.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @return The height of the status bar (in pixels).[m
[32m+[m[32m         */[m
[32m+[m[32m        public int getStatusBarHeight() {[m
[32m+[m[32m            return mStatusBarHeight;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Get the height of the action bar.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @return The height of the action bar (in pixels).[m
[32m+[m[32m         */[m
[32m+[m[32m        public int getActionBarHeight() {[m
[32m+[m[32m            return mActionBarHeight;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Does this device have a system navigation bar?[m
[32m+[m[32m         *[m
[32m+[m[32m         * @return True if this device uses soft key navigation, False otherwise.[m
[32m+[m[32m         */[m
[32m+[m[32m        public boolean hasNavigtionBar() {[m
[32m+[m[32m            return mHasNavigationBar;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Get the height of the system navigation bar.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @return The height of the navigation bar (in pixels). If the device does not have[m
[32m+[m[32m         * soft navigation keys, this will always return 0.[m
[32m+[m[32m         */[m
[32m+[m[32m        public int getNavigationBarHeight() {[m
[32m+[m[32m            return mNavigationBarHeight;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Get the width of the system navigation bar when it is placed vertically on the screen.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @return The width of the navigation bar (in pixels). If the device does not have[m
[32m+[m[32m         * soft navigation keys, this will always return 0.[m
[32m+[m[32m         */[m
[32m+[m[32m        public int getNavigationBarWidth() {[m
[32m+[m[32m            return mNavigationBarWidth;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Get the layout inset for any system UI that appears at the top of the screen.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @param withActionBar True to include the height of the action bar, False otherwise.[m
[32m+[m[32m         * @return The layout inset (in pixels).[m
[32m+[m[32m         */[m
[32m+[m[32m        public int getPixelInsetTop(boolean withActionBar) {[m
[32m+[m[32m            return (mTranslucentStatusBar ? mStatusBarHeight : 0) + (withActionBar ? mActionBarHeight : 0);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Get the layout inset for any system UI that appears at the bottom of the screen.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @return The layout inset (in pixels).[m
[32m+[m[32m         */[m
[32m+[m[32m        public int getPixelInsetBottom() {[m
[32m+[m[32m            if (mTranslucentNavBar && isNavigationAtBottom()) {[m
[32m+[m[32m                return mNavigationBarHeight;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                return 0;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Get the layout inset for any system UI that appears at the right of the screen.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @return The layout inset (in pixels).[m
[32m+[m[32m         */[m
[32m+[m[32m        public int getPixelInsetRight() {[m
[32m+[m[32m            if (mTranslucentNavBar && !isNavigationAtBottom()) {[m
[32m+[m[32m                return mNavigationBarWidth;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                return 0;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/superdemo/utils/WaConstants.java b/app/src/main/java/com/example/superdemo/utils/WaConstants.java[m
[1mindex 7942d68..0ceb293 100644[m
[1m--- a/app/src/main/java/com/example/superdemo/utils/WaConstants.java[m
[1m+++ b/app/src/main/java/com/example/superdemo/utils/WaConstants.java[m
[36m@@ -6,4 +6,6 @@[m [mpackage com.example.superdemo.utils;[m
 public class WaConstants {[m
 [m
     public static final String imageUrl = "http://zhuangbi.idagou.com/i/2015-07-04-0d25758338c6fa2e8f23182b6021c9da.jpg";[m
[32m+[m[32m    public static final String imageUrl2 = "http://zhuangbi.idagou.com/i/2015-07-07-26c59a95c0ec52dd9b94f62bb0724263.gif";[m
[32m+[m
 }[m
[1mdiff --git a/app/src/main/res/layout/activity_hellochart.xml b/app/src/main/res/layout/activity_hellochart.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..b1d3002[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/activity_hellochart.xml[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    xmlns:tools="http://schemas.android.com/tools"[m
[32m+[m[32m    android:orientation="vertical">[m
[32m+[m
[32m+[m[32m    <include layout="@layout/tool_bar"/>[m
[32m+[m
[32m+[m[32m    <lecho.lib.hellocharts.view.LineChartView[m
[32m+[m[32m        android:id="@+id/linechart"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="80dp"[m
[32m+[m[32m        android:layout_margin="@dimen/activity_horizontal_margin"/>[m
[32m+[m
[32m+[m[32m    <FrameLayout[m
[32m+[m[32m        android:id="@+id/content"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent"[m
[32m+[m[32m        tools:context=".chart.HelloChartActivity"[m
[32m+[m[32m        tools:ignore="MergeRootFrame"/>[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/activity_line_chart.xml b/app/src/main/res/layout/activity_line_chart.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..3df54e1[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/activity_line_chart.xml[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:tools="http://schemas.android.com/tools"[m
[32m+[m[32m    android:id="@+id/container"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    tools:ignore="MergeRootFrame" />[m
[32m+[m
[1mdiff --git a/app/src/main/res/layout/activity_news.xml b/app/src/main/res/layout/activity_news.xml[m
[1mindex 6536b6a..10d72ee 100644[m
[1m--- a/app/src/main/res/layout/activity_news.xml[m
[1m+++ b/app/src/main/res/layout/activity_news.xml[m
[36m@@ -1,7 +1,8 @@[m
 <?xml version="1.0" encoding="utf-8"?>[m
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
     android:layout_width="match_parent"[m
[31m-    android:layout_height="match_parent">[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:fitsSystemWindows="true">[m
 [m
     <com.example.superdemo.ui.WaveView[m
         android:id="@+id/wave"[m
[1mdiff --git a/app/src/main/res/layout/activity_refresh.xml b/app/src/main/res/layout/activity_refresh.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..ef724be[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/activity_refresh.xml[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:orientation="vertical">[m
[32m+[m
[32m+[m[32m    <Button[m
[32m+[m[32m        android:id="@+id/refresh_btn1"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:text="@string/ultra_pull_to_refresh"[m
[32m+[m[32m        android:textSize="16sp" />[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/activity_ui.xml b/app/src/main/res/layout/activity_ui.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..58a72a0[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/activity_ui.xml[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:orientation="vertical">[m
[32m+[m
[32m+[m[32m    <include layout="@layout/tool_bar" />[m
[32m+[m
[32m+[m[32m    <ScrollView[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent">[m
[32m+[m
[32m+[m[32m        <RelativeLayout[m
[32m+[m[32m            android:layout_width="match_parent"[m
[32m+[m[32m            android:layout_height="wrap_content">[m
[32m+[m
[32m+[m[32m            <Button[m
[32m+[m[32m                android:id="@+id/chart_btn"[m
[32m+[m[32m                android:layout_width="wrap_content"[m
[32m+[m[32m                android:layout_height="wrap_content"[m
[32m+[m[32m                android:text="@string/line_chart"[m
[32m+[m[32m                android:layout_centerInParent="true"[m
[32m+[m[32m                android:textSize="16sp" />[m
[32m+[m
[32m+[m
[32m+[m[32m        </RelativeLayout>[m
[32m+[m
[32m+[m
[32m+[m[32m    </ScrollView>[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/activity_ulrefresh.xml b/app/src/main/res/layout/activity_ulrefresh.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..f6c15a7[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/activity_ulrefresh.xml[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:app="http://schemas.android.com/apk/res-auto"[m
[32m+[m[32m    xmlns:tools="http://schemas.android.com/tools"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:fitsSystemWindows="true"[m
[32m+[m[32m    tools:context="com.example.superdemo.MainActivity">[m
[32m+[m
[32m+[m[32m    <android.support.design.widget.AppBarLayout[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:theme="@style/AppTheme.AppBarOverlay">[m
[32m+[m
[32m+[m[32m        <android.support.v7.widget.Toolbar[m
[32m+[m[32m            android:id="@+id/toolbar"[m
[32m+[m[32m            android:layout_width="match_parent"[m
[32m+[m[32m            android:layout_height="?attr/actionBarSize"[m
[32m+[m[32m            android:background="?attr/colorPrimary"[m
[32m+[m[32m            app:popupTheme="@style/AppTheme.PopupOverlay" />[m
[32m+[m
[32m+[m[32m    </android.support.design.widget.AppBarLayout>[m
[32m+[m
[32m+[m[32m    <include layout="@layout/content_refresh" />[m
[32m+[m
[32m+[m
[32m+[m[32m</android.support.design.widget.CoordinatorLayout>[m
[1mdiff --git a/app/src/main/res/layout/activity_wangyiyun.xml b/app/src/main/res/layout/activity_wangyiyun.xml[m
[1mindex c7f36bd..2e5a5c8 100644[m
[1m--- a/app/src/main/res/layout/activity_wangyiyun.xml[m
[1m+++ b/app/src/main/res/layout/activity_wangyiyun.xml[m
[36m@@ -2,7 +2,8 @@[m
 <android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
     xmlns:app="http://schemas.android.com/apk/res-auto"[m
     android:layout_width="match_parent"[m
[31m-    android:layout_height="match_parent">[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:fitsSystemWindows="true">[m
 [m
     <android.support.design.widget.AppBarLayout[m
         android:layout_width="match_parent"[m
[36m@@ -33,7 +34,6 @@[m
                 android:layout_width="match_parent"[m
                 android:layout_height="?attr/actionBarSize"[m
                 app:layout_collapseMode="pin"[m
[31m-                android:fitsSystemWindows="true"[m
                 app:popupTheme="@style/AppTheme.PopupOverlay">[m
 [m
                 <TextView[m
[1mdiff --git a/app/src/main/res/layout/content_refresh.xml b/app/src/main/res/layout/content_refresh.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..f98f9db[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/content_refresh.xml[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent">[m
[32m+[m
[32m+[m[32m    <in.srain.cube.views.ptr.PtrClassicFrameLayout xmlns:cube_ptr="http://schemas.android.com/apk/res-auto"[m
[32m+[m[32m        android:id="@+id/rotate_header_grid_view_frame"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent"[m
[32m+[m[32m        android:background="@color/recycle_item_click"[m
[32m+[m[32m        cube_ptr:ptr_duration_to_close="200"[m
[32m+[m[32m        cube_ptr:ptr_duration_to_close_header="1000"[m
[32m+[m[32m        cube_ptr:ptr_keep_header_when_refresh="true"[m
[32m+[m[32m        cube_ptr:ptr_pull_to_fresh="false"[m
[32m+[m[32m        cube_ptr:ptr_ratio_of_header_height_to_refresh="1.2"[m
[32m+[m[32m        cube_ptr:ptr_resistance="1.7">[m
[32m+[m
[32m+[m[32m        <com.example.superdemo.ui.swiper.SwipeMenuListView[m
[32m+[m[32m            android:id="@+id/rotate_header_list_view"[m
[32m+[m[32m            android:layout_width="match_parent"[m
[32m+[m[32m            android:layout_height="match_parent"[m
[32m+[m[32m            android:choiceMode="singleChoice"[m
[32m+[m[32m            android:divider="@color/recycle_item_click"[m
[32m+[m[32m            android:dividerHeight="1dp"[m
[32m+[m[32m            android:fadingEdge="none"[m
[32m+[m[32m            android:listSelector="@android:color/transparent"[m
[32m+[m[32m            android:paddingLeft="12dp"[m
[32m+[m[32m            android:paddingRight="12dp"[m
[32m+[m[32m            android:scrollbarStyle="outsideOverlay" />[m
[32m+[m
[32m+[m[32m    </in.srain.cube.views.ptr.PtrClassicFrameLayout>[m
[32m+[m[32m</RelativeLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/fragment_column_chart.xml b/app/src/main/res/layout/fragment_column_chart.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..2495173[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/fragment_column_chart.xml[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent">[m
[32m+[m
[32m+[m[32m    <include layout="@layout/tool_bar" />[m
[32m+[m
[32m+[m[32m    <lecho.lib.hellocharts.view.ColumnChartView[m
[32m+[m[32m        android:id="@+id/chart"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent"[m
[32m+[m[32m        android:layout_marginBottom="@dimen/activity_vertical_margin"[m
[32m+[m[32m        android:layout_marginLeft="@dimen/activity_horizontal_margin"[m
[32m+[m[32m        android:layout_marginRight="@dimen/activity_horizontal_margin"[m
[32m+[m[32m        android:layout_marginTop="72dp" />[m
[32m+[m
[32m+[m[32m</RelativeLayout>[m
[1mdiff --git a/app/src/main/res/layout/fragment_line_chart.xml b/app/src/main/res/layout/fragment_line_chart.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..627ba92[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/fragment_line_chart.xml[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent">[m
[32m+[m
[32m+[m[32m    <include layout="@layout/tool_bar" />[m
[32m+[m
[32m+[m[32m    <lecho.lib.hellocharts.view.LineChartView[m
[32m+[m[32m        android:id="@+id/chart"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent"[m
[32m+[m[32m        android:layout_marginBottom="@dimen/activity_vertical_margin"[m
[32m+[m[32m        android:layout_marginLeft="@dimen/activity_horizontal_margin"[m
[32m+[m[32m        android:layout_marginRight="@dimen/activity_horizontal_margin"[m
[32m+[m[32m        android:layout_marginTop="72dp" />[m
[32m+[m
[32m+[m[32m</RelativeLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/fragment_main.xml b/app/src/main/res/layout/fragment_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..d0218ca[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/fragment_main.xml[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:paddingBottom="@dimen/activity_vertical_margin"[m
[32m+[m[32m    android:paddingLeft="@dimen/activity_horizontal_margin"[m
[32m+[m[32m    android:paddingRight="@dimen/activity_horizontal_margin"[m
[32m+[m[32m    android:paddingTop="@dimen/activity_vertical_margin">[m
[32m+[m
[32m+[m[32m    <ListView[m
[32m+[m[32m        android:id="@android:id/list"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent"/>[m
[32m+[m
[32m+[m[32m</RelativeLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/grid_item.xml b/app/src/main/res/layout/grid_item.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..edf21a4[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/grid_item.xml[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:orientation="vertical"[m
[32m+[m[32m    android:paddingTop="15dp">[m
[32m+[m
[32m+[m
[32m+[m[32m    <ImageView[m
[32m+[m[32m        android:id="@+id/with_grid_view_item_image"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent"[m
[32m+[m[32m        android:scaleType="fitCenter"[m
[32m+[m[32m        android:src="@mipmap/head_pic" />[m
[32m+[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/list_item_sample.xml b/app/src/main/res/layout/list_item_sample.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..a27eefe[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/list_item_sample.xml[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="wrap_content"[m
[32m+[m[32m    android:padding="8dp" >[m
[32m+[m
[32m+[m[32m    <TextView[m
[32m+[m[32m        android:id="@+id/text1"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:layout_alignParentLeft="true"[m
[32m+[m[32m        android:layout_alignParentTop="true"[m
[32m+[m[32m        android:layout_toLeftOf="@+id/chart_layout"[m
[32m+[m[32m        android:text="TEXT1"[m
[32m+[m[32m        android:textSize="16sp" />[m
[32m+[m
[32m+[m[32m    <TextView[m
[32m+[m[32m        android:id="@+id/text2"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:layout_alignLeft="@+id/text1"[m
[32m+[m[32m        android:layout_below="@+id/text1"[m
[32m+[m[32m        android:layout_toLeftOf="@id/chart_layout"[m
[32m+[m[32m        android:text="TEXT2"[m
[32m+[m[32m        android:textSize="12sp" />[m
[32m+[m
[32m+[m[32m    <FrameLayout[m
[32m+[m[32m        android:id="@id/chart_layout"[m
[32m+[m[32m        android:layout_width="54dp"[m
[32m+[m[32m        android:layout_height="54dp"[m
[32m+[m[32m        android:layout_alignParentRight="true"[m
[32m+[m[32m        android:visibility="gone" >[m
[32m+[m[32m    </FrameLayout>[m
[32m+[m
[32m+[m[32m</RelativeLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/tool_bar.xml b/app/src/main/res/layout/tool_bar.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..6961c01[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/tool_bar.xml[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="?attr/actionBarSize"[m
[32m+[m[32m    xmlns:app="http://schemas.android.com/apk/res-auto"[m
[32m+[m[32m    android:orientation="vertical">[m
[32m+[m
[32m+[m[32m    <android.support.design.widget.AppBarLayout[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:theme="@style/AppTheme.AppBarOverlay">[m
[32m+[m
[32m+[m[32m        <android.support.v7.widget.Toolbar[m
[32m+[m[32m            android:id="@+id/toolbar"[m
[32m+[m[32m            app:popupTheme="@style/AppTheme.PopupOverlay"[m
[32m+[m[32m            android:layout_width="match_parent"[m
[32m+[m[32m            android:layout_height="?attr/actionBarSize"[m
[32m+[m[32m            android:background="?attr/colorPrimary" />[m
[32m+[m
[32m+[m[32m    </android.support.design.widget.AppBarLayout>[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/menu/activity_main_drawer.xml b/app/src/main/res/menu/activity_main_drawer.xml[m
[1mindex 2a7f467..452dc23 100644[m
[1m--- a/app/src/main/res/menu/activity_main_drawer.xml[m
[1m+++ b/app/src/main/res/menu/activity_main_drawer.xml[m
[36m@@ -25,11 +25,11 @@[m
             <item[m
                 android:id="@+id/nav_share"[m
                 android:icon="@drawable/ic_menu_share"[m
[31m-                android:title="Share" />[m
[32m+[m[32m                android:title="UI界面" />[m
             <item[m
                 android:id="@+id/nav_send"[m
                 android:icon="@drawable/ic_menu_send"[m
[31m-                android:title="Send" />[m
[32m+[m[32m                android:title="下拉刷新" />[m
         </menu>[m
     </item>[m
 [m
[1mdiff --git a/app/src/main/res/menu/column_chart.xml b/app/src/main/res/menu/column_chart.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..5c959c9[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/menu/column_chart.xml[m
[36m@@ -0,0 +1,63 @@[m
[32m+[m[32m<menu xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:app="http://schemas.android.com/apk/res-auto"[m
[32m+[m[32m    xmlns:tools="http://schemas.android.com/tools"[m
[32m+[m[32m    tools:context="lecho.lib.hellocharts.samples.ColumnChartActivity" >[m
[32m+[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_reset"[m
[32m+[m[32m        android:title="Reset chart"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_subcolumns"[m
[32m+[m[32m        android:title="Subcolumns"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_stacked"[m
[32m+[m[32m        android:title="Stacked"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_negative_subcolumns"[m
[32m+[m[32m        android:title="Negative subcolumns"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_negative_stacked"[m
[32m+[m[32m        android:title="Negative stacked"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_axes"[m
[32m+[m[32m        android:title="Toggle axes"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_axes_names"[m
[32m+[m[32m        android:title="Toggle axes names"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_labels"[m
[32m+[m[32m        android:title="Toggle labels"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_animate"[m
[32m+[m[32m        android:title="Animate chart"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_selection_mode"[m
[32m+[m[32m        android:title="Toggle selection mode"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_touch_zoom"[m
[32m+[m[32m        android:title="Toggle touch zoom"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_zoom_both"[m
[32m+[m[32m        android:title="Zoom X/Y"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_zoom_horizontal"[m
[32m+[m[32m        android:title="Zoom X"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_zoom_vertical"[m
[32m+[m[32m        android:title="Zoom Y"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m
[32m+[m[32m</menu>[m
[1mdiff --git a/app/src/main/res/menu/line_chart.xml b/app/src/main/res/menu/line_chart.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..a68e18e[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/menu/line_chart.xml[m
[36m@@ -0,0 +1,81 @@[m
[32m+[m[32m<menu xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:app="http://schemas.android.com/apk/res-auto">[m
[32m+[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_reset"[m
[32m+[m[32m        android:title="Reset chart"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_add_line"[m
[32m+[m[32m        android:title="Add line"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_lines"[m
[32m+[m[32m        android:title="Toggle lines/scattered"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_points"[m
[32m+[m[32m        android:title="Toggle points"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_cubic"[m
[32m+[m[32m        android:title="Toggle Cubic curve"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_area"[m
[32m+[m[32m        android:title="Toggle area"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_point_color"[m
[32m+[m[32m        android:title="Toggle Point Color"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_shape_circles"[m
[32m+[m[32m        android:title="Circle shape"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_shape_square"[m
[32m+[m[32m        android:title="Square shape"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_shape_diamond"[m
[32m+[m[32m        android:title="Diamond shape"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_axes"[m
[32m+[m[32m        android:title="Toggle axes"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_axes_names"[m
[32m+[m[32m        android:title="Toggle axes names"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_labels"[m
[32m+[m[32m        android:title="Toggle labels"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_animate"[m
[32m+[m[32m        android:title="Animate chart"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_selection_mode"[m
[32m+[m[32m        android:title="Toggle selection mode"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_toggle_touch_zoom"[m
[32m+[m[32m        android:title="Toggle touch zoom"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_zoom_both"[m
[32m+[m[32m        android:title="Zoom X/Y"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_zoom_horizontal"[m
[32m+[m[32m        android:title="Zoom X"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_zoom_vertical"[m
[32m+[m[32m        android:title="Zoom Y"[m
[32m+[m[32m        app:showAsAction="never"/>[m
[32m+[m
[32m+[m[32m</menu>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/menu/main.xml b/app/src/main/res/menu/main.xml[m
[1mindex a2411e3..add154f 100644[m
[1m--- a/app/src/main/res/menu/main.xml[m
[1m+++ b/app/src/main/res/menu/main.xml[m
[36m@@ -6,4 +6,10 @@[m
         android:orderInCategory="100"[m
         android:title="@string/action_settings"[m
         app:showAsAction="never" />[m
[32m+[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/action_about"[m
[32m+[m[32m        android:orderInCategory="100"[m
[32m+[m[32m        android:title="@string/action_settings"[m
[32m+[m[32m        app:showAsAction="never" />[m
 </menu>[m
[1mdiff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml[m
[1mindex 579afe0..e80264c 100644[m
[1m--- a/app/src/main/res/values/strings.xml[m
[1m+++ b/app/src/main/res/values/strings.xml[m
[36m@@ -9,6 +9,8 @@[m
     <string name="github_url">https://github.com/haoma2012/SuperDemo</string>[m
     <string name="my_first_ui">网易我的界面</string>[m
     <string name="my_second_ui">背景收缩</string>[m
[32m+[m[32m    <string name="ultra_pull_to_refresh">使用Ultra Pull To Refresh</string>[m
[32m+[m[32m    <string name="line_chart">强大的图表</string>[m
 [m
 [m
 </resources>[m
